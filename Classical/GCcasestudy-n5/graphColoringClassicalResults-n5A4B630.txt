--------------------------------------------------------------------

# GRAPH COLORInG PROBLEM WITH n COLOURS On CLASSICAL SOLVER #

--------------------------------------------------------------------
Is graph connected? True
--------------------------------------------------------------------
1st expression:
--------------------------------------------------------------------
(Const(exp, (Binary(vc[0][0])*Binary(vc[0][1])))+Const(exp, (Binary(vc[0][0])*Binary(vc[0][2])))+Const(exp, (Binary(vc[0][0])*Binary(vc[0][3])))+Const(exp, (Binary(vc[0][0])*Binary(vc[0][4])))+Const(exp, (Binary(vc[0][1])*Binary(vc[0][0])))+Const(exp, (Binary(vc[0][1])*Binary(vc[0][2])))+Const(exp, (Binary(vc[0][1])*Binary(vc[0][3])))+Const(exp, (Binary(vc[0][1])*Binary(vc[0][4])))+Const(exp, (Binary(vc[0][2])*Binary(vc[0][0])))+Const(exp, (Binary(vc[0][2])*Binary(vc[0][1])))+Const(exp, (Binary(vc[0][2])*Binary(vc[0][3])))+Const(exp, (Binary(vc[0][2])*Binary(vc[0][4])))+Const(exp, (Binary(vc[0][3])*Binary(vc[0][0])))+Const(exp, (Binary(vc[0][3])*Binary(vc[0][1])))+Const(exp, (Binary(vc[0][3])*Binary(vc[0][2])))+Const(exp, (Binary(vc[0][3])*Binary(vc[0][4])))+Const(exp, (Binary(vc[0][4])*Binary(vc[0][0])))+Const(exp, (Binary(vc[0][4])*Binary(vc[0][1])))+Const(exp, (Binary(vc[0][4])*Binary(vc[0][2])))+Const(exp, (Binary(vc[0][4])*Binary(vc[0][3])))+Const(exp, (Binary(vc[1][0])*Binary(vc[1][1])))+Const(exp, (Binary(vc[1][0])*Binary(vc[1][2])))+Const(exp, (Binary(vc[1][0])*Binary(vc[1][3])))+Const(exp, (Binary(vc[1][0])*Binary(vc[1][4])))+Const(exp, (Binary(vc[1][1])*Binary(vc[1][0])))+Const(exp, (Binary(vc[1][1])*Binary(vc[1][2])))+Const(exp, (Binary(vc[1][1])*Binary(vc[1][3])))+Const(exp, (Binary(vc[1][1])*Binary(vc[1][4])))+Const(exp, (Binary(vc[1][2])*Binary(vc[1][0])))+Const(exp, (Binary(vc[1][2])*Binary(vc[1][1])))+Const(exp, (Binary(vc[1][2])*Binary(vc[1][3])))+Const(exp, (Binary(vc[1][2])*Binary(vc[1][4])))+Const(exp, (Binary(vc[1][3])*Binary(vc[1][0])))+Const(exp, (Binary(vc[1][3])*Binary(vc[1][1])))+Const(exp, (Binary(vc[1][3])*Binary(vc[1][2])))+Const(exp, (Binary(vc[1][3])*Binary(vc[1][4])))+Const(exp, (Binary(vc[1][4])*Binary(vc[1][0])))+Const(exp, (Binary(vc[1][4])*Binary(vc[1][1])))+Const(exp, (Binary(vc[1][4])*Binary(vc[1][2])))+Const(exp, (Binary(vc[1][4])*Binary(vc[1][3])))+Const(exp, (Binary(vc[2][0])*Binary(vc[2][1])))+Const(exp, (Binary(vc[2][0])*Binary(vc[2][2])))+Const(exp, (Binary(vc[2][0])*Binary(vc[2][3])))+Const(exp, (Binary(vc[2][0])*Binary(vc[2][4])))+Const(exp, (Binary(vc[2][1])*Binary(vc[2][0])))+Const(exp, (Binary(vc[2][1])*Binary(vc[2][2])))+Const(exp, (Binary(vc[2][1])*Binary(vc[2][3])))+Const(exp, (Binary(vc[2][1])*Binary(vc[2][4])))+Const(exp, (Binary(vc[2][2])*Binary(vc[2][0])))+Const(exp, (Binary(vc[2][2])*Binary(vc[2][1])))+Const(exp, (Binary(vc[2][2])*Binary(vc[2][3])))+Const(exp, (Binary(vc[2][2])*Binary(vc[2][4])))+Const(exp, (Binary(vc[2][3])*Binary(vc[2][0])))+Const(exp, (Binary(vc[2][3])*Binary(vc[2][1])))+Const(exp, (Binary(vc[2][3])*Binary(vc[2][2])))+Const(exp, (Binary(vc[2][3])*Binary(vc[2][4])))+Const(exp, (Binary(vc[2][4])*Binary(vc[2][0])))+Const(exp, (Binary(vc[2][4])*Binary(vc[2][1])))+Const(exp, (Binary(vc[2][4])*Binary(vc[2][2])))+Const(exp, (Binary(vc[2][4])*Binary(vc[2][3])))+Const(exp, (Binary(vc[3][0])*Binary(vc[3][1])))+Const(exp, (Binary(vc[3][0])*Binary(vc[3][2])))+Const(exp, (Binary(vc[3][0])*Binary(vc[3][3])))+Const(exp, (Binary(vc[3][0])*Binary(vc[3][4])))+Const(exp, (Binary(vc[3][1])*Binary(vc[3][0])))+Const(exp, (Binary(vc[3][1])*Binary(vc[3][2])))+Const(exp, (Binary(vc[3][1])*Binary(vc[3][3])))+Const(exp, (Binary(vc[3][1])*Binary(vc[3][4])))+Const(exp, (Binary(vc[3][2])*Binary(vc[3][0])))+Const(exp, (Binary(vc[3][2])*Binary(vc[3][1])))+Const(exp, (Binary(vc[3][2])*Binary(vc[3][3])))+Const(exp, (Binary(vc[3][2])*Binary(vc[3][4])))+Const(exp, (Binary(vc[3][3])*Binary(vc[3][0])))+Const(exp, (Binary(vc[3][3])*Binary(vc[3][1])))+Const(exp, (Binary(vc[3][3])*Binary(vc[3][2])))+Const(exp, (Binary(vc[3][3])*Binary(vc[3][4])))+Const(exp, (Binary(vc[3][4])*Binary(vc[3][0])))+Const(exp, (Binary(vc[3][4])*Binary(vc[3][1])))+Const(exp, (Binary(vc[3][4])*Binary(vc[3][2])))+Const(exp, (Binary(vc[3][4])*Binary(vc[3][3])))+Const(exp, (Binary(vc[4][0])*Binary(vc[4][1])))+Const(exp, (Binary(vc[4][0])*Binary(vc[4][2])))+Const(exp, (Binary(vc[4][0])*Binary(vc[4][3])))+Const(exp, (Binary(vc[4][0])*Binary(vc[4][4])))+Const(exp, (Binary(vc[4][1])*Binary(vc[4][0])))+Const(exp, (Binary(vc[4][1])*Binary(vc[4][2])))+Const(exp, (Binary(vc[4][1])*Binary(vc[4][3])))+Const(exp, (Binary(vc[4][1])*Binary(vc[4][4])))+Const(exp, (Binary(vc[4][2])*Binary(vc[4][0])))+Const(exp, (Binary(vc[4][2])*Binary(vc[4][1])))+Const(exp, (Binary(vc[4][2])*Binary(vc[4][3])))+Const(exp, (Binary(vc[4][2])*Binary(vc[4][4])))+Const(exp, (Binary(vc[4][3])*Binary(vc[4][0])))+Const(exp, (Binary(vc[4][3])*Binary(vc[4][1])))+Const(exp, (Binary(vc[4][3])*Binary(vc[4][2])))+Const(exp, (Binary(vc[4][3])*Binary(vc[4][4])))+Const(exp, (Binary(vc[4][4])*Binary(vc[4][0])))+Const(exp, (Binary(vc[4][4])*Binary(vc[4][1])))+Const(exp, (Binary(vc[4][4])*Binary(vc[4][2])))+Const(exp, (Binary(vc[4][4])*Binary(vc[4][3])))+((Const(exp, (Binary(vc[0][0])*Binary(vc[0][1])))+Const(exp, (Binary(vc[0][0])*Binary(vc[0][2])))+Const(exp, (Binary(vc[0][0])*Binary(vc[0][3])))+Const(exp, (Binary(vc[0][0])*Binary(vc[0][4])))+Const(exp, (Binary(vc[0][1])*Binary(vc[0][0])))+Const(exp, (Binary(vc[0][1])*Binary(vc[0][2])))+Const(exp, (Binary(vc[0][1])*Binary(vc[0][3])))+Const(exp, (Binary(vc[0][1])*Binary(vc[0][4])))+Const(exp, (Binary(vc[0][2])*Binary(vc[0][0])))+Const(exp, (Binary(vc[0][2])*Binary(vc[0][1])))+Const(exp, (Binary(vc[0][2])*Binary(vc[0][3])))+Const(exp, (Binary(vc[0][2])*Binary(vc[0][4])))+Const(exp, (Binary(vc[0][3])*Binary(vc[0][0])))+Const(exp, (Binary(vc[0][3])*Binary(vc[0][1])))+Const(exp, (Binary(vc[0][3])*Binary(vc[0][2])))+Const(exp, (Binary(vc[0][3])*Binary(vc[0][4])))+Const(exp, (Binary(vc[0][4])*Binary(vc[0][0])))+Const(exp, (Binary(vc[0][4])*Binary(vc[0][1])))+Const(exp, (Binary(vc[0][4])*Binary(vc[0][2])))+Const(exp, (Binary(vc[0][4])*Binary(vc[0][3])))+Const(exp, (Binary(vc[1][0])*Binary(vc[1][1])))+Const(exp, (Binary(vc[1][0])*Binary(vc[1][2])))+Const(exp, (Binary(vc[1][0])*Binary(vc[1][3])))+Const(exp, (Binary(vc[1][0])*Binary(vc[1][4])))+Const(exp, (Binary(vc[1][1])*Binary(vc[1][0])))+Const(exp, (Binary(vc[1][1])*Binary(vc[1][2])))+Const(exp, (Binary(vc[1][1])*Binary(vc[1][3])))+Const(exp, (Binary(vc[1][1])*Binary(vc[1][4])))+Const(exp, (Binary(vc[1][2])*Binary(vc[1][0])))+Const(exp, (Binary(vc[1][2])*Binary(vc[1][1])))+Const(exp, (Binary(vc[1][2])*Binary(vc[1][3])))+Const(exp, (Binary(vc[1][2])*Binary(vc[1][4])))+Const(exp, (Binary(vc[1][3])*Binary(vc[1][0])))+Const(exp, (Binary(vc[1][3])*Binary(vc[1][1])))+Const(exp, (Binary(vc[1][3])*Binary(vc[1][2])))+Const(exp, (Binary(vc[1][3])*Binary(vc[1][4])))+Const(exp, (Binary(vc[1][4])*Binary(vc[1][0])))+Const(exp, (Binary(vc[1][4])*Binary(vc[1][1])))+Const(exp, (Binary(vc[1][4])*Binary(vc[1][2])))+Const(exp, (Binary(vc[1][4])*Binary(vc[1][3])))+Const(exp, (Binary(vc[2][0])*Binary(vc[2][1])))+Const(exp, (Binary(vc[2][0])*Binary(vc[2][2])))+Const(exp, (Binary(vc[2][0])*Binary(vc[2][3])))+Const(exp, (Binary(vc[2][0])*Binary(vc[2][4])))+Const(exp, (Binary(vc[2][1])*Binary(vc[2][0])))+Const(exp, (Binary(vc[2][1])*Binary(vc[2][2])))+Const(exp, (Binary(vc[2][1])*Binary(vc[2][3])))+Const(exp, (Binary(vc[2][1])*Binary(vc[2][4])))+Const(exp, (Binary(vc[2][2])*Binary(vc[2][0])))+Const(exp, (Binary(vc[2][2])*Binary(vc[2][1])))+Const(exp, (Binary(vc[2][2])*Binary(vc[2][3])))+Const(exp, (Binary(vc[2][2])*Binary(vc[2][4])))+Const(exp, (Binary(vc[2][3])*Binary(vc[2][0])))+Const(exp, (Binary(vc[2][3])*Binary(vc[2][1])))+Const(exp, (Binary(vc[2][3])*Binary(vc[2][2])))+Const(exp, (Binary(vc[2][3])*Binary(vc[2][4])))+Const(exp, (Binary(vc[2][4])*Binary(vc[2][0])))+Const(exp, (Binary(vc[2][4])*Binary(vc[2][1])))+Const(exp, (Binary(vc[2][4])*Binary(vc[2][2])))+Const(exp, (Binary(vc[2][4])*Binary(vc[2][3])))+Const(exp, (Binary(vc[3][0])*Binary(vc[3][1])))+Const(exp, (Binary(vc[3][0])*Binary(vc[3][2])))+Const(exp, (Binary(vc[3][0])*Binary(vc[3][3])))+Const(exp, (Binary(vc[3][0])*Binary(vc[3][4])))+Const(exp, (Binary(vc[3][1])*Binary(vc[3][0])))+Const(exp, (Binary(vc[3][1])*Binary(vc[3][2])))+Const(exp, (Binary(vc[3][1])*Binary(vc[3][3])))+Const(exp, (Binary(vc[3][1])*Binary(vc[3][4])))+Const(exp, (Binary(vc[3][2])*Binary(vc[3][0])))+Const(exp, (Binary(vc[3][2])*Binary(vc[3][1])))+Const(exp, (Binary(vc[3][2])*Binary(vc[3][3])))+Const(exp, (Binary(vc[3][2])*Binary(vc[3][4])))+Const(exp, (Binary(vc[3][3])*Binary(vc[3][0])))+Const(exp, (Binary(vc[3][3])*Binary(vc[3][1])))+Const(exp, (Binary(vc[3][3])*Binary(vc[3][2])))+Const(exp, (Binary(vc[3][3])*Binary(vc[3][4])))+Const(exp, (Binary(vc[3][4])*Binary(vc[3][0])))+Const(exp, (Binary(vc[3][4])*Binary(vc[3][1])))+Const(exp, (Binary(vc[3][4])*Binary(vc[3][2])))+Const(exp, (Binary(vc[3][4])*Binary(vc[3][3])))+Const(exp, (Binary(vc[4][0])*Binary(vc[4][1])))+Const(exp, (Binary(vc[4][0])*Binary(vc[4][2])))+Const(exp, (Binary(vc[4][0])*Binary(vc[4][3])))+Const(exp, (Binary(vc[4][0])*Binary(vc[4][4])))+Const(exp, (Binary(vc[4][1])*Binary(vc[4][0])))+Const(exp, (Binary(vc[4][1])*Binary(vc[4][2])))+Const(exp, (Binary(vc[4][1])*Binary(vc[4][3])))+Const(exp, (Binary(vc[4][1])*Binary(vc[4][4])))+Const(exp, (Binary(vc[4][2])*Binary(vc[4][0])))+Const(exp, (Binary(vc[4][2])*Binary(vc[4][1])))+Const(exp, (Binary(vc[4][2])*Binary(vc[4][3])))+Const(exp, (Binary(vc[4][2])*Binary(vc[4][4])))+Const(exp, (Binary(vc[4][3])*Binary(vc[4][0])))+Const(exp, (Binary(vc[4][3])*Binary(vc[4][1])))+Const(exp, (Binary(vc[4][3])*Binary(vc[4][2])))+Const(exp, (Binary(vc[4][3])*Binary(vc[4][4])))+Const(exp, (Binary(vc[4][4])*Binary(vc[4][0])))+Const(exp, (Binary(vc[4][4])*Binary(vc[4][1])))+Const(exp, (Binary(vc[4][4])*Binary(vc[4][2])))+Const(exp, (Binary(vc[4][4])*Binary(vc[4][3]))))*Num(630)))
--------------------------------------------------------------------
2nd expression:
--------------------------------------------------------------------
(Const(exp, ((Binary(vc[0][0])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[0][1])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[0][2])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[0][3])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[0][4])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[1][0])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[1][1])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[1][2])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[1][3])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[1][4])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[2][0])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[2][1])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[2][2])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[2][3])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[2][4])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[3][0])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[3][1])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[3][2])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[3][3])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[3][4])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[4][0])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[4][1])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[4][2])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[4][3])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[4][4])*Num(-1))+Num(1)))+((Const(exp, ((Binary(vc[0][0])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[0][1])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[0][2])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[0][3])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[0][4])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[1][0])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[1][1])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[1][2])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[1][3])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[1][4])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[2][0])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[2][1])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[2][2])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[2][3])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[2][4])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[3][0])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[3][1])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[3][2])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[3][3])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[3][4])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[4][0])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[4][1])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[4][2])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[4][3])*Num(-1))+Num(1)))+Const(exp, ((Binary(vc[4][4])*Num(-1))+Num(1))))*Num(4)))
--------------------------------------------------------------------
3rd expression:
--------------------------------------------------------------------
(Const(exp, ((Binary(vc[0][0])*Binary(vc[1][0]))*Num(1)))+Const(exp, ((Binary(vc[0][1])*Binary(vc[1][1]))*Num(1)))+Const(exp, ((Binary(vc[0][2])*Binary(vc[1][2]))*Num(1)))+Const(exp, ((Binary(vc[0][3])*Binary(vc[1][3]))*Num(1)))+Const(exp, ((Binary(vc[0][4])*Binary(vc[1][4]))*Num(1)))+Const(exp, ((Binary(vc[0][0])*Binary(vc[2][0]))*Num(1)))+Const(exp, ((Binary(vc[0][1])*Binary(vc[2][1]))*Num(1)))+Const(exp, ((Binary(vc[0][2])*Binary(vc[2][2]))*Num(1)))+Const(exp, ((Binary(vc[0][3])*Binary(vc[2][3]))*Num(1)))+Const(exp, ((Binary(vc[0][4])*Binary(vc[2][4]))*Num(1)))+Const(exp, ((Binary(vc[0][0])*Binary(vc[3][0]))*Num(1)))+Const(exp, ((Binary(vc[0][1])*Binary(vc[3][1]))*Num(1)))+Const(exp, ((Binary(vc[0][2])*Binary(vc[3][2]))*Num(1)))+Const(exp, ((Binary(vc[0][3])*Binary(vc[3][3]))*Num(1)))+Const(exp, ((Binary(vc[0][4])*Binary(vc[3][4]))*Num(1)))+Const(exp, ((Binary(vc[0][0])*Binary(vc[4][0]))*Num(1)))+Const(exp, ((Binary(vc[0][1])*Binary(vc[4][1]))*Num(1)))+Const(exp, ((Binary(vc[0][2])*Binary(vc[4][2]))*Num(1)))+Const(exp, ((Binary(vc[0][3])*Binary(vc[4][3]))*Num(1)))+Const(exp, ((Binary(vc[0][4])*Binary(vc[4][4]))*Num(1)))+Const(exp, ((Binary(vc[1][0])*Binary(vc[0][0]))*Num(1)))+Const(exp, ((Binary(vc[1][1])*Binary(vc[0][1]))*Num(1)))+Const(exp, ((Binary(vc[1][2])*Binary(vc[0][2]))*Num(1)))+Const(exp, ((Binary(vc[1][3])*Binary(vc[0][3]))*Num(1)))+Const(exp, ((Binary(vc[1][4])*Binary(vc[0][4]))*Num(1)))+Const(exp, ((Binary(vc[1][0])*Binary(vc[2][0]))*Num(0)))+Const(exp, ((Binary(vc[1][1])*Binary(vc[2][1]))*Num(0)))+Const(exp, ((Binary(vc[1][2])*Binary(vc[2][2]))*Num(0)))+Const(exp, ((Binary(vc[1][3])*Binary(vc[2][3]))*Num(0)))+Const(exp, ((Binary(vc[1][4])*Binary(vc[2][4]))*Num(0)))+Const(exp, ((Binary(vc[1][0])*Binary(vc[3][0]))*Num(1)))+Const(exp, ((Binary(vc[1][1])*Binary(vc[3][1]))*Num(1)))+Const(exp, ((Binary(vc[1][2])*Binary(vc[3][2]))*Num(1)))+Const(exp, ((Binary(vc[1][3])*Binary(vc[3][3]))*Num(1)))+Const(exp, ((Binary(vc[1][4])*Binary(vc[3][4]))*Num(1)))+Const(exp, ((Binary(vc[1][0])*Binary(vc[4][0]))*Num(0)))+Const(exp, ((Binary(vc[1][1])*Binary(vc[4][1]))*Num(0)))+Const(exp, ((Binary(vc[1][2])*Binary(vc[4][2]))*Num(0)))+Const(exp, ((Binary(vc[1][3])*Binary(vc[4][3]))*Num(0)))+Const(exp, ((Binary(vc[1][4])*Binary(vc[4][4]))*Num(0)))+Const(exp, ((Binary(vc[2][0])*Binary(vc[0][0]))*Num(1)))+Const(exp, ((Binary(vc[2][1])*Binary(vc[0][1]))*Num(1)))+Const(exp, ((Binary(vc[2][2])*Binary(vc[0][2]))*Num(1)))+Const(exp, ((Binary(vc[2][3])*Binary(vc[0][3]))*Num(1)))+Const(exp, ((Binary(vc[2][4])*Binary(vc[0][4]))*Num(1)))+Const(exp, ((Binary(vc[2][0])*Binary(vc[1][0]))*Num(0)))+Const(exp, ((Binary(vc[2][1])*Binary(vc[1][1]))*Num(0)))+Const(exp, ((Binary(vc[2][2])*Binary(vc[1][2]))*Num(0)))+Const(exp, ((Binary(vc[2][3])*Binary(vc[1][3]))*Num(0)))+Const(exp, ((Binary(vc[2][4])*Binary(vc[1][4]))*Num(0)))+Const(exp, ((Binary(vc[2][0])*Binary(vc[3][0]))*Num(1)))+Const(exp, ((Binary(vc[2][1])*Binary(vc[3][1]))*Num(1)))+Const(exp, ((Binary(vc[2][2])*Binary(vc[3][2]))*Num(1)))+Const(exp, ((Binary(vc[2][3])*Binary(vc[3][3]))*Num(1)))+Const(exp, ((Binary(vc[2][4])*Binary(vc[3][4]))*Num(1)))+Const(exp, ((Binary(vc[2][0])*Binary(vc[4][0]))*Num(0)))+Const(exp, ((Binary(vc[2][1])*Binary(vc[4][1]))*Num(0)))+Const(exp, ((Binary(vc[2][2])*Binary(vc[4][2]))*Num(0)))+Const(exp, ((Binary(vc[2][3])*Binary(vc[4][3]))*Num(0)))+Const(exp, ((Binary(vc[2][4])*Binary(vc[4][4]))*Num(0)))+Const(exp, ((Binary(vc[3][0])*Binary(vc[0][0]))*Num(1)))+Const(exp, ((Binary(vc[3][1])*Binary(vc[0][1]))*Num(1)))+Const(exp, ((Binary(vc[3][2])*Binary(vc[0][2]))*Num(1)))+Const(exp, ((Binary(vc[3][3])*Binary(vc[0][3]))*Num(1)))+Const(exp, ((Binary(vc[3][4])*Binary(vc[0][4]))*Num(1)))+Const(exp, ((Binary(vc[3][0])*Binary(vc[1][0]))*Num(1)))+Const(exp, ((Binary(vc[3][1])*Binary(vc[1][1]))*Num(1)))+Const(exp, ((Binary(vc[3][2])*Binary(vc[1][2]))*Num(1)))+Const(exp, ((Binary(vc[3][3])*Binary(vc[1][3]))*Num(1)))+Const(exp, ((Binary(vc[3][4])*Binary(vc[1][4]))*Num(1)))+Const(exp, ((Binary(vc[3][0])*Binary(vc[2][0]))*Num(1)))+Const(exp, ((Binary(vc[3][1])*Binary(vc[2][1]))*Num(1)))+Const(exp, ((Binary(vc[3][2])*Binary(vc[2][2]))*Num(1)))+Const(exp, ((Binary(vc[3][3])*Binary(vc[2][3]))*Num(1)))+Const(exp, ((Binary(vc[3][4])*Binary(vc[2][4]))*Num(1)))+Const(exp, ((Binary(vc[3][0])*Binary(vc[4][0]))*Num(1)))+Const(exp, ((Binary(vc[3][1])*Binary(vc[4][1]))*Num(1)))+Const(exp, ((Binary(vc[3][2])*Binary(vc[4][2]))*Num(1)))+Const(exp, ((Binary(vc[3][3])*Binary(vc[4][3]))*Num(1)))+Const(exp, ((Binary(vc[3][4])*Binary(vc[4][4]))*Num(1)))+Const(exp, ((Binary(vc[4][0])*Binary(vc[0][0]))*Num(1)))+Const(exp, ((Binary(vc[4][1])*Binary(vc[0][1]))*Num(1)))+Const(exp, ((Binary(vc[4][2])*Binary(vc[0][2]))*Num(1)))+Const(exp, ((Binary(vc[4][3])*Binary(vc[0][3]))*Num(1)))+Const(exp, ((Binary(vc[4][4])*Binary(vc[0][4]))*Num(1)))+Const(exp, ((Binary(vc[4][0])*Binary(vc[1][0]))*Num(0)))+Const(exp, ((Binary(vc[4][1])*Binary(vc[1][1]))*Num(0)))+Const(exp, ((Binary(vc[4][2])*Binary(vc[1][2]))*Num(0)))+Const(exp, ((Binary(vc[4][3])*Binary(vc[1][3]))*Num(0)))+Const(exp, ((Binary(vc[4][4])*Binary(vc[1][4]))*Num(0)))+Const(exp, ((Binary(vc[4][0])*Binary(vc[2][0]))*Num(0)))+Const(exp, ((Binary(vc[4][1])*Binary(vc[2][1]))*Num(0)))+Const(exp, ((Binary(vc[4][2])*Binary(vc[2][2]))*Num(0)))+Const(exp, ((Binary(vc[4][3])*Binary(vc[2][3]))*Num(0)))+Const(exp, ((Binary(vc[4][4])*Binary(vc[2][4]))*Num(0)))+Const(exp, ((Binary(vc[4][0])*Binary(vc[3][0]))*Num(1)))+Const(exp, ((Binary(vc[4][1])*Binary(vc[3][1]))*Num(1)))+Const(exp, ((Binary(vc[4][2])*Binary(vc[3][2]))*Num(1)))+Const(exp, ((Binary(vc[4][3])*Binary(vc[3][3]))*Num(1)))+Const(exp, ((Binary(vc[4][4])*Binary(vc[3][4]))*Num(1)))+((Const(exp, ((Binary(vc[0][0])*Binary(vc[1][0]))*Num(1)))+Const(exp, ((Binary(vc[0][1])*Binary(vc[1][1]))*Num(1)))+Const(exp, ((Binary(vc[0][2])*Binary(vc[1][2]))*Num(1)))+Const(exp, ((Binary(vc[0][3])*Binary(vc[1][3]))*Num(1)))+Const(exp, ((Binary(vc[0][4])*Binary(vc[1][4]))*Num(1)))+Const(exp, ((Binary(vc[0][0])*Binary(vc[2][0]))*Num(1)))+Const(exp, ((Binary(vc[0][1])*Binary(vc[2][1]))*Num(1)))+Const(exp, ((Binary(vc[0][2])*Binary(vc[2][2]))*Num(1)))+Const(exp, ((Binary(vc[0][3])*Binary(vc[2][3]))*Num(1)))+Const(exp, ((Binary(vc[0][4])*Binary(vc[2][4]))*Num(1)))+Const(exp, ((Binary(vc[0][0])*Binary(vc[3][0]))*Num(1)))+Const(exp, ((Binary(vc[0][1])*Binary(vc[3][1]))*Num(1)))+Const(exp, ((Binary(vc[0][2])*Binary(vc[3][2]))*Num(1)))+Const(exp, ((Binary(vc[0][3])*Binary(vc[3][3]))*Num(1)))+Const(exp, ((Binary(vc[0][4])*Binary(vc[3][4]))*Num(1)))+Const(exp, ((Binary(vc[0][0])*Binary(vc[4][0]))*Num(1)))+Const(exp, ((Binary(vc[0][1])*Binary(vc[4][1]))*Num(1)))+Const(exp, ((Binary(vc[0][2])*Binary(vc[4][2]))*Num(1)))+Const(exp, ((Binary(vc[0][3])*Binary(vc[4][3]))*Num(1)))+Const(exp, ((Binary(vc[0][4])*Binary(vc[4][4]))*Num(1)))+Const(exp, ((Binary(vc[1][0])*Binary(vc[0][0]))*Num(1)))+Const(exp, ((Binary(vc[1][1])*Binary(vc[0][1]))*Num(1)))+Const(exp, ((Binary(vc[1][2])*Binary(vc[0][2]))*Num(1)))+Const(exp, ((Binary(vc[1][3])*Binary(vc[0][3]))*Num(1)))+Const(exp, ((Binary(vc[1][4])*Binary(vc[0][4]))*Num(1)))+Const(exp, ((Binary(vc[1][0])*Binary(vc[2][0]))*Num(0)))+Const(exp, ((Binary(vc[1][1])*Binary(vc[2][1]))*Num(0)))+Const(exp, ((Binary(vc[1][2])*Binary(vc[2][2]))*Num(0)))+Const(exp, ((Binary(vc[1][3])*Binary(vc[2][3]))*Num(0)))+Const(exp, ((Binary(vc[1][4])*Binary(vc[2][4]))*Num(0)))+Const(exp, ((Binary(vc[1][0])*Binary(vc[3][0]))*Num(1)))+Const(exp, ((Binary(vc[1][1])*Binary(vc[3][1]))*Num(1)))+Const(exp, ((Binary(vc[1][2])*Binary(vc[3][2]))*Num(1)))+Const(exp, ((Binary(vc[1][3])*Binary(vc[3][3]))*Num(1)))+Const(exp, ((Binary(vc[1][4])*Binary(vc[3][4]))*Num(1)))+Const(exp, ((Binary(vc[1][0])*Binary(vc[4][0]))*Num(0)))+Const(exp, ((Binary(vc[1][1])*Binary(vc[4][1]))*Num(0)))+Const(exp, ((Binary(vc[1][2])*Binary(vc[4][2]))*Num(0)))+Const(exp, ((Binary(vc[1][3])*Binary(vc[4][3]))*Num(0)))+Const(exp, ((Binary(vc[1][4])*Binary(vc[4][4]))*Num(0)))+Const(exp, ((Binary(vc[2][0])*Binary(vc[0][0]))*Num(1)))+Const(exp, ((Binary(vc[2][1])*Binary(vc[0][1]))*Num(1)))+Const(exp, ((Binary(vc[2][2])*Binary(vc[0][2]))*Num(1)))+Const(exp, ((Binary(vc[2][3])*Binary(vc[0][3]))*Num(1)))+Const(exp, ((Binary(vc[2][4])*Binary(vc[0][4]))*Num(1)))+Const(exp, ((Binary(vc[2][0])*Binary(vc[1][0]))*Num(0)))+Const(exp, ((Binary(vc[2][1])*Binary(vc[1][1]))*Num(0)))+Const(exp, ((Binary(vc[2][2])*Binary(vc[1][2]))*Num(0)))+Const(exp, ((Binary(vc[2][3])*Binary(vc[1][3]))*Num(0)))+Const(exp, ((Binary(vc[2][4])*Binary(vc[1][4]))*Num(0)))+Const(exp, ((Binary(vc[2][0])*Binary(vc[3][0]))*Num(1)))+Const(exp, ((Binary(vc[2][1])*Binary(vc[3][1]))*Num(1)))+Const(exp, ((Binary(vc[2][2])*Binary(vc[3][2]))*Num(1)))+Const(exp, ((Binary(vc[2][3])*Binary(vc[3][3]))*Num(1)))+Const(exp, ((Binary(vc[2][4])*Binary(vc[3][4]))*Num(1)))+Const(exp, ((Binary(vc[2][0])*Binary(vc[4][0]))*Num(0)))+Const(exp, ((Binary(vc[2][1])*Binary(vc[4][1]))*Num(0)))+Const(exp, ((Binary(vc[2][2])*Binary(vc[4][2]))*Num(0)))+Const(exp, ((Binary(vc[2][3])*Binary(vc[4][3]))*Num(0)))+Const(exp, ((Binary(vc[2][4])*Binary(vc[4][4]))*Num(0)))+Const(exp, ((Binary(vc[3][0])*Binary(vc[0][0]))*Num(1)))+Const(exp, ((Binary(vc[3][1])*Binary(vc[0][1]))*Num(1)))+Const(exp, ((Binary(vc[3][2])*Binary(vc[0][2]))*Num(1)))+Const(exp, ((Binary(vc[3][3])*Binary(vc[0][3]))*Num(1)))+Const(exp, ((Binary(vc[3][4])*Binary(vc[0][4]))*Num(1)))+Const(exp, ((Binary(vc[3][0])*Binary(vc[1][0]))*Num(1)))+Const(exp, ((Binary(vc[3][1])*Binary(vc[1][1]))*Num(1)))+Const(exp, ((Binary(vc[3][2])*Binary(vc[1][2]))*Num(1)))+Const(exp, ((Binary(vc[3][3])*Binary(vc[1][3]))*Num(1)))+Const(exp, ((Binary(vc[3][4])*Binary(vc[1][4]))*Num(1)))+Const(exp, ((Binary(vc[3][0])*Binary(vc[2][0]))*Num(1)))+Const(exp, ((Binary(vc[3][1])*Binary(vc[2][1]))*Num(1)))+Const(exp, ((Binary(vc[3][2])*Binary(vc[2][2]))*Num(1)))+Const(exp, ((Binary(vc[3][3])*Binary(vc[2][3]))*Num(1)))+Const(exp, ((Binary(vc[3][4])*Binary(vc[2][4]))*Num(1)))+Const(exp, ((Binary(vc[3][0])*Binary(vc[4][0]))*Num(1)))+Const(exp, ((Binary(vc[3][1])*Binary(vc[4][1]))*Num(1)))+Const(exp, ((Binary(vc[3][2])*Binary(vc[4][2]))*Num(1)))+Const(exp, ((Binary(vc[3][3])*Binary(vc[4][3]))*Num(1)))+Const(exp, ((Binary(vc[3][4])*Binary(vc[4][4]))*Num(1)))+Const(exp, ((Binary(vc[4][0])*Binary(vc[0][0]))*Num(1)))+Const(exp, ((Binary(vc[4][1])*Binary(vc[0][1]))*Num(1)))+Const(exp, ((Binary(vc[4][2])*Binary(vc[0][2]))*Num(1)))+Const(exp, ((Binary(vc[4][3])*Binary(vc[0][3]))*Num(1)))+Const(exp, ((Binary(vc[4][4])*Binary(vc[0][4]))*Num(1)))+Const(exp, ((Binary(vc[4][0])*Binary(vc[1][0]))*Num(0)))+Const(exp, ((Binary(vc[4][1])*Binary(vc[1][1]))*Num(0)))+Const(exp, ((Binary(vc[4][2])*Binary(vc[1][2]))*Num(0)))+Const(exp, ((Binary(vc[4][3])*Binary(vc[1][3]))*Num(0)))+Const(exp, ((Binary(vc[4][4])*Binary(vc[1][4]))*Num(0)))+Const(exp, ((Binary(vc[4][0])*Binary(vc[2][0]))*Num(0)))+Const(exp, ((Binary(vc[4][1])*Binary(vc[2][1]))*Num(0)))+Const(exp, ((Binary(vc[4][2])*Binary(vc[2][2]))*Num(0)))+Const(exp, ((Binary(vc[4][3])*Binary(vc[2][3]))*Num(0)))+Const(exp, ((Binary(vc[4][4])*Binary(vc[2][4]))*Num(0)))+Const(exp, ((Binary(vc[4][0])*Binary(vc[3][0]))*Num(1)))+Const(exp, ((Binary(vc[4][1])*Binary(vc[3][1]))*Num(1)))+Const(exp, ((Binary(vc[4][2])*Binary(vc[3][2]))*Num(1)))+Const(exp, ((Binary(vc[4][3])*Binary(vc[3][3]))*Num(1)))+Const(exp, ((Binary(vc[4][4])*Binary(vc[3][4]))*Num(1))))*Num(4)))
--------------------------------------------------------------------
4th expression:
--------------------------------------------------------------------
(Const(exp, (Binary(vc[0][0])*((Binary(c[0])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[0][1])*((Binary(c[1])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[0][2])*((Binary(c[2])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[0][3])*((Binary(c[3])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[0][4])*((Binary(c[4])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[1][0])*((Binary(c[0])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[1][1])*((Binary(c[1])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[1][2])*((Binary(c[2])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[1][3])*((Binary(c[3])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[1][4])*((Binary(c[4])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[2][0])*((Binary(c[0])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[2][1])*((Binary(c[1])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[2][2])*((Binary(c[2])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[2][3])*((Binary(c[3])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[2][4])*((Binary(c[4])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[3][0])*((Binary(c[0])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[3][1])*((Binary(c[1])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[3][2])*((Binary(c[2])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[3][3])*((Binary(c[3])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[3][4])*((Binary(c[4])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[4][0])*((Binary(c[0])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[4][1])*((Binary(c[1])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[4][2])*((Binary(c[2])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[4][3])*((Binary(c[3])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[4][4])*((Binary(c[4])*Num(-1))+Num(1))))+((Const(exp, (Binary(vc[0][0])*((Binary(c[0])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[0][1])*((Binary(c[1])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[0][2])*((Binary(c[2])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[0][3])*((Binary(c[3])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[0][4])*((Binary(c[4])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[1][0])*((Binary(c[0])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[1][1])*((Binary(c[1])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[1][2])*((Binary(c[2])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[1][3])*((Binary(c[3])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[1][4])*((Binary(c[4])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[2][0])*((Binary(c[0])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[2][1])*((Binary(c[1])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[2][2])*((Binary(c[2])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[2][3])*((Binary(c[3])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[2][4])*((Binary(c[4])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[3][0])*((Binary(c[0])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[3][1])*((Binary(c[1])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[3][2])*((Binary(c[2])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[3][3])*((Binary(c[3])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[3][4])*((Binary(c[4])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[4][0])*((Binary(c[0])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[4][1])*((Binary(c[1])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[4][2])*((Binary(c[2])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[4][3])*((Binary(c[3])*Num(-1))+Num(1))))+Const(exp, (Binary(vc[4][4])*((Binary(c[4])*Num(-1))+Num(1)))))*Num(4)))
--------------------------------------------------------------------
5th expression:
--------------------------------------------------------------------
(Const(exp, Binary(c[0]))+Const(exp, Binary(c[1]))+Const(exp, Binary(c[2]))+Const(exp, Binary(c[3]))+Const(exp, Binary(c[4])))
--------------------------------------------------------------------

QUBO:

--------------------------------------------------------------------
{('vc[0][0]', 'vc[0][1]'): 1262.0, ('vc[0][0]', 'vc[0][2]'): 1262.0, ('vc[0][0]', 'vc[0][3]'): 1262.0, ('vc[0][0]', 'vc[0][4]'): 1262.0, ('vc[0][0]', 'vc[1][0]'): 10.0, ('vc[0][0]', 'vc[2][0]'): 10.0, ('vc[0][0]', 'vc[3][0]'): 10.0, ('vc[0][0]', 'vc[4][0]'): 10.0, ('c[0]', 'vc[0][0]'): -5.0, ('vc[0][1]', 'vc[0][2]'): 1262.0, ('vc[0][1]', 'vc[0][3]'): 1262.0, ('vc[0][1]', 'vc[0][4]'): 1262.0, ('vc[0][1]', 'vc[1][1]'): 10.0, ('vc[0][1]', 'vc[2][1]'): 10.0, ('vc[0][1]', 'vc[3][1]'): 10.0, ('vc[0][1]', 'vc[4][1]'): 10.0, ('c[1]', 'vc[0][1]'): -5.0, ('vc[0][2]', 'vc[0][3]'): 1262.0, ('vc[0][2]', 'vc[0][4]'): 1262.0, ('vc[0][2]', 'vc[1][2]'): 10.0, ('vc[0][2]', 'vc[2][2]'): 10.0, ('vc[0][2]', 'vc[3][2]'): 10.0, ('vc[0][2]', 'vc[4][2]'): 10.0, ('c[2]', 'vc[0][2]'): -5.0, ('vc[0][3]', 'vc[0][4]'): 1262.0, ('vc[0][3]', 'vc[1][3]'): 10.0, ('vc[0][3]', 'vc[2][3]'): 10.0, ('vc[0][3]', 'vc[3][3]'): 10.0, ('vc[0][3]', 'vc[4][3]'): 10.0, ('c[3]', 'vc[0][3]'): -5.0, ('vc[0][4]', 'vc[1][4]'): 10.0, ('vc[0][4]', 'vc[2][4]'): 10.0, ('vc[0][4]', 'vc[3][4]'): 10.0, ('vc[0][4]', 'vc[4][4]'): 10.0, ('c[4]', 'vc[0][4]'): -5.0, ('vc[1][0]', 'vc[1][1]'): 1262.0, ('vc[1][0]', 'vc[1][2]'): 1262.0, ('vc[1][0]', 'vc[1][3]'): 1262.0, ('vc[1][0]', 'vc[1][4]'): 1262.0, ('vc[1][0]', 'vc[2][0]'): 0.0, ('vc[1][0]', 'vc[3][0]'): 10.0, ('vc[1][0]', 'vc[4][0]'): 0.0, ('c[0]', 'vc[1][0]'): -5.0, ('vc[1][1]', 'vc[1][2]'): 1262.0, ('vc[1][1]', 'vc[1][3]'): 1262.0, ('vc[1][1]', 'vc[1][4]'): 1262.0, ('vc[1][1]', 'vc[2][1]'): 0.0, ('vc[1][1]', 'vc[3][1]'): 10.0, ('vc[1][1]', 'vc[4][1]'): 0.0, ('c[1]', 'vc[1][1]'): -5.0, ('vc[1][2]', 'vc[1][3]'): 1262.0, ('vc[1][2]', 'vc[1][4]'): 1262.0, ('vc[1][2]', 'vc[2][2]'): 0.0, ('vc[1][2]', 'vc[3][2]'): 10.0, ('vc[1][2]', 'vc[4][2]'): 0.0, ('c[2]', 'vc[1][2]'): -5.0, ('vc[1][3]', 'vc[1][4]'): 1262.0, ('vc[1][3]', 'vc[2][3]'): 0.0, ('vc[1][3]', 'vc[3][3]'): 10.0, ('vc[1][3]', 'vc[4][3]'): 0.0, ('c[3]', 'vc[1][3]'): -5.0, ('vc[1][4]', 'vc[2][4]'): 0.0, ('vc[1][4]', 'vc[3][4]'): 10.0, ('vc[1][4]', 'vc[4][4]'): 0.0, ('c[4]', 'vc[1][4]'): -5.0, ('vc[2][0]', 'vc[2][1]'): 1262.0, ('vc[2][0]', 'vc[2][2]'): 1262.0, ('vc[2][0]', 'vc[2][3]'): 1262.0, ('vc[2][0]', 'vc[2][4]'): 1262.0, ('vc[2][0]', 'vc[3][0]'): 10.0, ('vc[2][0]', 'vc[4][0]'): 0.0, ('c[0]', 'vc[2][0]'): -5.0, ('vc[2][1]', 'vc[2][2]'): 1262.0, ('vc[2][1]', 'vc[2][3]'): 1262.0, ('vc[2][1]', 'vc[2][4]'): 1262.0, ('vc[2][1]', 'vc[3][1]'): 10.0, ('vc[2][1]', 'vc[4][1]'): 0.0, ('c[1]', 'vc[2][1]'): -5.0, ('vc[2][2]', 'vc[2][3]'): 1262.0, ('vc[2][2]', 'vc[2][4]'): 1262.0, ('vc[2][2]', 'vc[3][2]'): 10.0, ('vc[2][2]', 'vc[4][2]'): 0.0, ('c[2]', 'vc[2][2]'): -5.0, ('vc[2][3]', 'vc[2][4]'): 1262.0, ('vc[2][3]', 'vc[3][3]'): 10.0, ('vc[2][3]', 'vc[4][3]'): 0.0, ('c[3]', 'vc[2][3]'): -5.0, ('vc[2][4]', 'vc[3][4]'): 10.0, ('vc[2][4]', 'vc[4][4]'): 0.0, ('c[4]', 'vc[2][4]'): -5.0, ('vc[3][0]', 'vc[3][1]'): 1262.0, ('vc[3][0]', 'vc[3][2]'): 1262.0, ('vc[3][0]', 'vc[3][3]'): 1262.0, ('vc[3][0]', 'vc[3][4]'): 1262.0, ('vc[3][0]', 'vc[4][0]'): 10.0, ('c[0]', 'vc[3][0]'): -5.0, ('vc[3][1]', 'vc[3][2]'): 1262.0, ('vc[3][1]', 'vc[3][3]'): 1262.0, ('vc[3][1]', 'vc[3][4]'): 1262.0, ('vc[3][1]', 'vc[4][1]'): 10.0, ('c[1]', 'vc[3][1]'): -5.0, ('vc[3][2]', 'vc[3][3]'): 1262.0, ('vc[3][2]', 'vc[3][4]'): 1262.0, ('vc[3][2]', 'vc[4][2]'): 10.0, ('c[2]', 'vc[3][2]'): -5.0, ('vc[3][3]', 'vc[3][4]'): 1262.0, ('vc[3][3]', 'vc[4][3]'): 10.0, ('c[3]', 'vc[3][3]'): -5.0, ('vc[3][4]', 'vc[4][4]'): 10.0, ('c[4]', 'vc[3][4]'): -5.0, ('vc[4][0]', 'vc[4][1]'): 1262.0, ('vc[4][0]', 'vc[4][2]'): 1262.0, ('vc[4][0]', 'vc[4][3]'): 1262.0, ('vc[4][0]', 'vc[4][4]'): 1262.0, ('c[0]', 'vc[4][0]'): -5.0, ('vc[4][1]', 'vc[4][2]'): 1262.0, ('vc[4][1]', 'vc[4][3]'): 1262.0, ('vc[4][1]', 'vc[4][4]'): 1262.0, ('c[1]', 'vc[4][1]'): -5.0, ('vc[4][2]', 'vc[4][3]'): 1262.0, ('vc[4][2]', 'vc[4][4]'): 1262.0, ('c[2]', 'vc[4][2]'): -5.0, ('vc[4][3]', 'vc[4][4]'): 1262.0, ('c[3]', 'vc[4][3]'): -5.0, ('c[4]', 'vc[4][4]'): -5.0, ('vc[0][0]', 'vc[0][0]'): 0.0, ('vc[0][1]', 'vc[0][1]'): 0.0, ('vc[0][2]', 'vc[0][2]'): 0.0, ('vc[0][3]', 'vc[0][3]'): 0.0, ('vc[0][4]', 'vc[0][4]'): 0.0, ('vc[1][0]', 'vc[1][0]'): 0.0, ('vc[1][1]', 'vc[1][1]'): 0.0, ('vc[1][2]', 'vc[1][2]'): 0.0, ('vc[1][3]', 'vc[1][3]'): 0.0, ('vc[1][4]', 'vc[1][4]'): 0.0, ('vc[2][0]', 'vc[2][0]'): 0.0, ('vc[2][1]', 'vc[2][1]'): 0.0, ('vc[2][2]', 'vc[2][2]'): 0.0, ('vc[2][3]', 'vc[2][3]'): 0.0, ('vc[2][4]', 'vc[2][4]'): 0.0, ('vc[3][0]', 'vc[3][0]'): 0.0, ('vc[3][1]', 'vc[3][1]'): 0.0, ('vc[3][2]', 'vc[3][2]'): 0.0, ('vc[3][3]', 'vc[3][3]'): 0.0, ('vc[3][4]', 'vc[3][4]'): 0.0, ('vc[4][0]', 'vc[4][0]'): 0.0, ('vc[4][1]', 'vc[4][1]'): 0.0, ('vc[4][2]', 'vc[4][2]'): 0.0, ('vc[4][3]', 'vc[4][3]'): 0.0, ('vc[4][4]', 'vc[4][4]'): 0.0, ('c[0]', 'c[0]'): 1.0, ('c[1]', 'c[1]'): 1.0, ('c[2]', 'c[2]'): 1.0, ('c[3]', 'c[3]'): 1.0, ('c[4]', 'c[4]'): 1.0}
--------------------------------------------------------------------

CLASSICAL RESULTS:

--------------------------------------------------------------------
{'c[0]': 1, 'c[1]': 1, 'c[2]': 1, 'c[3]': 0, 'c[4]': 0, 'vc[0][0]': 1, 'vc[0][1]': 0, 'vc[0][2]': 0, 'vc[0][3]': 0, 'vc[0][4]': 0, 'vc[1][0]': 0, 'vc[1][1]': 1, 'vc[1][2]': 0, 'vc[1][3]': 0, 'vc[1][4]': 0, 'vc[2][0]': 0, 'vc[2][1]': 1, 'vc[2][2]': 0, 'vc[2][3]': 0, 'vc[2][4]': 0, 'vc[3][0]': 0, 'vc[3][1]': 0, 'vc[3][2]': 1, 'vc[3][3]': 0, 'vc[3][4]': 0, 'vc[4][0]': 0, 'vc[4][1]': 1, 'vc[4][2]': 0, 'vc[4][3]': 0, 'vc[4][4]': 0}
number of broken constraint = 0
{}
energy = 103.0
--------------------------------------------------------------------

TIME (sec):

--------------------------------------------------------------------
6.198671102523804 All results 0.0006198671102523803 One result
--------------------------------------------------------------------

List of graph colors:

--------------------------------------------------------------------
{0: (0.86, 0.33999999999999997, 0.8287999999999999), 1: (0.33999999999999997, 0.8287999999999999, 0.86), 2: (0.33999999999999997, 0.8287999999999999, 0.86), 3: (0.33999999999999997, 0.86, 0.3712), 4: (0.33999999999999997, 0.8287999999999999, 0.86)}
--------------------------------------------------------------------

Number of nodes and number of colors:

--------------------------------------------------------------------
5  nodes and  3  colors
