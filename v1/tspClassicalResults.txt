Array([[Binary(v[0][0]), Binary(v[0][1]), Binary(v[0][2]), Binary(v[0][3]), Binary(v[0][4])],
       [Binary(v[1][0]), Binary(v[1][1]), Binary(v[1][2]), Binary(v[1][3]), Binary(v[1][4])],
       [Binary(v[2][0]), Binary(v[2][1]), Binary(v[2][2]), Binary(v[2][3]), Binary(v[2][4])],
       [Binary(v[3][0]), Binary(v[3][1]), Binary(v[3][2]), Binary(v[3][3]), Binary(v[3][4])],
       [Binary(v[4][0]), Binary(v[4][1]), Binary(v[4][2]), Binary(v[4][3]), Binary(v[4][4])]])
--------------------------------------------------------------------
1st expression:
--------------------------------------------------------------------
(Const(exp1(0,0), ((Binary(v[0][0])*Num(-1))+Num(1)))+Const(exp1(0,1), ((Binary(v[0][1])*Num(-1))+Num(1)))+Const(exp1(0,2), ((Binary(v[0][2])*Num(-1))+Num(1)))+Const(exp1(0,3), ((Binary(v[0][3])*Num(-1))+Num(1)))+Const(exp1(0,4), ((Binary(v[0][4])*Num(-1))+Num(1)))+Const(exp1(1,0), ((Binary(v[1][0])*Num(-1))+Num(1)))+Const(exp1(1,1), ((Binary(v[1][1])*Num(-1))+Num(1)))+Const(exp1(1,2), ((Binary(v[1][2])*Num(-1))+Num(1)))+Const(exp1(1,3), ((Binary(v[1][3])*Num(-1))+Num(1)))+Const(exp1(1,4), ((Binary(v[1][4])*Num(-1))+Num(1)))+Const(exp1(2,0), ((Binary(v[2][0])*Num(-1))+Num(1)))+Const(exp1(2,1), ((Binary(v[2][1])*Num(-1))+Num(1)))+Const(exp1(2,2), ((Binary(v[2][2])*Num(-1))+Num(1)))+Const(exp1(2,3), ((Binary(v[2][3])*Num(-1))+Num(1)))+Const(exp1(2,4), ((Binary(v[2][4])*Num(-1))+Num(1)))+Const(exp1(3,0), ((Binary(v[3][0])*Num(-1))+Num(1)))+Const(exp1(3,1), ((Binary(v[3][1])*Num(-1))+Num(1)))+Const(exp1(3,2), ((Binary(v[3][2])*Num(-1))+Num(1)))+Const(exp1(3,3), ((Binary(v[3][3])*Num(-1))+Num(1)))+Const(exp1(3,4), ((Binary(v[3][4])*Num(-1))+Num(1)))+Const(exp1(4,0), ((Binary(v[4][0])*Num(-1))+Num(1)))+Const(exp1(4,1), ((Binary(v[4][1])*Num(-1))+Num(1)))+Const(exp1(4,2), ((Binary(v[4][2])*Num(-1))+Num(1)))+Const(exp1(4,3), ((Binary(v[4][3])*Num(-1))+Num(1)))+Const(exp1(4,4), ((Binary(v[4][4])*Num(-1))+Num(1)))+Const(exp1(4,4), ((Const(exp1(0,0), ((Binary(v[0][0])*Num(-1))+Num(1)))+Const(exp1(0,1), ((Binary(v[0][1])*Num(-1))+Num(1)))+Const(exp1(0,2), ((Binary(v[0][2])*Num(-1))+Num(1)))+Const(exp1(0,3), ((Binary(v[0][3])*Num(-1))+Num(1)))+Const(exp1(0,4), ((Binary(v[0][4])*Num(-1))+Num(1)))+Const(exp1(1,0), ((Binary(v[1][0])*Num(-1))+Num(1)))+Const(exp1(1,1), ((Binary(v[1][1])*Num(-1))+Num(1)))+Const(exp1(1,2), ((Binary(v[1][2])*Num(-1))+Num(1)))+Const(exp1(1,3), ((Binary(v[1][3])*Num(-1))+Num(1)))+Const(exp1(1,4), ((Binary(v[1][4])*Num(-1))+Num(1)))+Const(exp1(2,0), ((Binary(v[2][0])*Num(-1))+Num(1)))+Const(exp1(2,1), ((Binary(v[2][1])*Num(-1))+Num(1)))+Const(exp1(2,2), ((Binary(v[2][2])*Num(-1))+Num(1)))+Const(exp1(2,3), ((Binary(v[2][3])*Num(-1))+Num(1)))+Const(exp1(2,4), ((Binary(v[2][4])*Num(-1))+Num(1)))+Const(exp1(3,0), ((Binary(v[3][0])*Num(-1))+Num(1)))+Const(exp1(3,1), ((Binary(v[3][1])*Num(-1))+Num(1)))+Const(exp1(3,2), ((Binary(v[3][2])*Num(-1))+Num(1)))+Const(exp1(3,3), ((Binary(v[3][3])*Num(-1))+Num(1)))+Const(exp1(3,4), ((Binary(v[3][4])*Num(-1))+Num(1)))+Const(exp1(4,0), ((Binary(v[4][0])*Num(-1))+Num(1)))+Const(exp1(4,1), ((Binary(v[4][1])*Num(-1))+Num(1)))+Const(exp1(4,2), ((Binary(v[4][2])*Num(-1))+Num(1)))+Const(exp1(4,3), ((Binary(v[4][3])*Num(-1))+Num(1)))+Const(exp1(4,4), ((Binary(v[4][4])*Num(-1))+Num(1))))*Num(9.486833480505139))))
--------------------------------------------------------------------
2nd expression:
--------------------------------------------------------------------
(Const(exp2(0,0), (Binary(v[0][0])*Binary(v[1][0])))+Const(exp2(0,1), (Binary(v[0][1])*Binary(v[1][1])))+Const(exp2(0,2), (Binary(v[0][2])*Binary(v[1][2])))+Const(exp2(0,3), (Binary(v[0][3])*Binary(v[1][3])))+Const(exp2(0,4), (Binary(v[0][4])*Binary(v[1][4])))+Const(exp2(0,0), (Binary(v[0][0])*Binary(v[2][0])))+Const(exp2(0,1), (Binary(v[0][1])*Binary(v[2][1])))+Const(exp2(0,2), (Binary(v[0][2])*Binary(v[2][2])))+Const(exp2(0,3), (Binary(v[0][3])*Binary(v[2][3])))+Const(exp2(0,4), (Binary(v[0][4])*Binary(v[2][4])))+Const(exp2(0,0), (Binary(v[0][0])*Binary(v[3][0])))+Const(exp2(0,1), (Binary(v[0][1])*Binary(v[3][1])))+Const(exp2(0,2), (Binary(v[0][2])*Binary(v[3][2])))+Const(exp2(0,3), (Binary(v[0][3])*Binary(v[3][3])))+Const(exp2(0,4), (Binary(v[0][4])*Binary(v[3][4])))+Const(exp2(0,0), (Binary(v[0][0])*Binary(v[4][0])))+Const(exp2(0,1), (Binary(v[0][1])*Binary(v[4][1])))+Const(exp2(0,2), (Binary(v[0][2])*Binary(v[4][2])))+Const(exp2(0,3), (Binary(v[0][3])*Binary(v[4][3])))+Const(exp2(0,4), (Binary(v[0][4])*Binary(v[4][4])))+Const(exp2(1,0), (Binary(v[1][0])*Binary(v[0][0])))+Const(exp2(1,1), (Binary(v[1][1])*Binary(v[0][1])))+Const(exp2(1,2), (Binary(v[1][2])*Binary(v[0][2])))+Const(exp2(1,3), (Binary(v[1][3])*Binary(v[0][3])))+Const(exp2(1,4), (Binary(v[1][4])*Binary(v[0][4])))+Const(exp2(1,0), (Binary(v[1][0])*Binary(v[2][0])))+Const(exp2(1,1), (Binary(v[1][1])*Binary(v[2][1])))+Const(exp2(1,2), (Binary(v[1][2])*Binary(v[2][2])))+Const(exp2(1,3), (Binary(v[1][3])*Binary(v[2][3])))+Const(exp2(1,4), (Binary(v[1][4])*Binary(v[2][4])))+Const(exp2(1,0), (Binary(v[1][0])*Binary(v[3][0])))+Const(exp2(1,1), (Binary(v[1][1])*Binary(v[3][1])))+Const(exp2(1,2), (Binary(v[1][2])*Binary(v[3][2])))+Const(exp2(1,3), (Binary(v[1][3])*Binary(v[3][3])))+Const(exp2(1,4), (Binary(v[1][4])*Binary(v[3][4])))+Const(exp2(1,0), (Binary(v[1][0])*Binary(v[4][0])))+Const(exp2(1,1), (Binary(v[1][1])*Binary(v[4][1])))+Const(exp2(1,2), (Binary(v[1][2])*Binary(v[4][2])))+Const(exp2(1,3), (Binary(v[1][3])*Binary(v[4][3])))+Const(exp2(1,4), (Binary(v[1][4])*Binary(v[4][4])))+Const(exp2(2,0), (Binary(v[2][0])*Binary(v[0][0])))+Const(exp2(2,1), (Binary(v[2][1])*Binary(v[0][1])))+Const(exp2(2,2), (Binary(v[2][2])*Binary(v[0][2])))+Const(exp2(2,3), (Binary(v[2][3])*Binary(v[0][3])))+Const(exp2(2,4), (Binary(v[2][4])*Binary(v[0][4])))+Const(exp2(2,0), (Binary(v[2][0])*Binary(v[1][0])))+Const(exp2(2,1), (Binary(v[2][1])*Binary(v[1][1])))+Const(exp2(2,2), (Binary(v[2][2])*Binary(v[1][2])))+Const(exp2(2,3), (Binary(v[2][3])*Binary(v[1][3])))+Const(exp2(2,4), (Binary(v[2][4])*Binary(v[1][4])))+Const(exp2(2,0), (Binary(v[2][0])*Binary(v[3][0])))+Const(exp2(2,1), (Binary(v[2][1])*Binary(v[3][1])))+Const(exp2(2,2), (Binary(v[2][2])*Binary(v[3][2])))+Const(exp2(2,3), (Binary(v[2][3])*Binary(v[3][3])))+Const(exp2(2,4), (Binary(v[2][4])*Binary(v[3][4])))+Const(exp2(2,0), (Binary(v[2][0])*Binary(v[4][0])))+Const(exp2(2,1), (Binary(v[2][1])*Binary(v[4][1])))+Const(exp2(2,2), (Binary(v[2][2])*Binary(v[4][2])))+Const(exp2(2,3), (Binary(v[2][3])*Binary(v[4][3])))+Const(exp2(2,4), (Binary(v[2][4])*Binary(v[4][4])))+Const(exp2(3,0), (Binary(v[3][0])*Binary(v[0][0])))+Const(exp2(3,1), (Binary(v[3][1])*Binary(v[0][1])))+Const(exp2(3,2), (Binary(v[3][2])*Binary(v[0][2])))+Const(exp2(3,3), (Binary(v[3][3])*Binary(v[0][3])))+Const(exp2(3,4), (Binary(v[3][4])*Binary(v[0][4])))+Const(exp2(3,0), (Binary(v[3][0])*Binary(v[1][0])))+Const(exp2(3,1), (Binary(v[3][1])*Binary(v[1][1])))+Const(exp2(3,2), (Binary(v[3][2])*Binary(v[1][2])))+Const(exp2(3,3), (Binary(v[3][3])*Binary(v[1][3])))+Const(exp2(3,4), (Binary(v[3][4])*Binary(v[1][4])))+Const(exp2(3,0), (Binary(v[3][0])*Binary(v[2][0])))+Const(exp2(3,1), (Binary(v[3][1])*Binary(v[2][1])))+Const(exp2(3,2), (Binary(v[3][2])*Binary(v[2][2])))+Const(exp2(3,3), (Binary(v[3][3])*Binary(v[2][3])))+Const(exp2(3,4), (Binary(v[3][4])*Binary(v[2][4])))+Const(exp2(3,0), (Binary(v[3][0])*Binary(v[4][0])))+Const(exp2(3,1), (Binary(v[3][1])*Binary(v[4][1])))+Const(exp2(3,2), (Binary(v[3][2])*Binary(v[4][2])))+Const(exp2(3,3), (Binary(v[3][3])*Binary(v[4][3])))+Const(exp2(3,4), (Binary(v[3][4])*Binary(v[4][4])))+Const(exp2(4,0), (Binary(v[4][0])*Binary(v[0][0])))+Const(exp2(4,1), (Binary(v[4][1])*Binary(v[0][1])))+Const(exp2(4,2), (Binary(v[4][2])*Binary(v[0][2])))+Const(exp2(4,3), (Binary(v[4][3])*Binary(v[0][3])))+Const(exp2(4,4), (Binary(v[4][4])*Binary(v[0][4])))+Const(exp2(4,0), (Binary(v[4][0])*Binary(v[1][0])))+Const(exp2(4,1), (Binary(v[4][1])*Binary(v[1][1])))+Const(exp2(4,2), (Binary(v[4][2])*Binary(v[1][2])))+Const(exp2(4,3), (Binary(v[4][3])*Binary(v[1][3])))+Const(exp2(4,4), (Binary(v[4][4])*Binary(v[1][4])))+Const(exp2(4,0), (Binary(v[4][0])*Binary(v[2][0])))+Const(exp2(4,1), (Binary(v[4][1])*Binary(v[2][1])))+Const(exp2(4,2), (Binary(v[4][2])*Binary(v[2][2])))+Const(exp2(4,3), (Binary(v[4][3])*Binary(v[2][3])))+Const(exp2(4,4), (Binary(v[4][4])*Binary(v[2][4])))+Const(exp2(4,0), (Binary(v[4][0])*Binary(v[3][0])))+Const(exp2(4,1), (Binary(v[4][1])*Binary(v[3][1])))+Const(exp2(4,2), (Binary(v[4][2])*Binary(v[3][2])))+Const(exp2(4,3), (Binary(v[4][3])*Binary(v[3][3])))+Const(exp2(4,4), (Binary(v[4][4])*Binary(v[3][4])))+Const(exp2(4,4), ((Const(exp2(0,0), (Binary(v[0][0])*Binary(v[1][0])))+Const(exp2(0,1), (Binary(v[0][1])*Binary(v[1][1])))+Const(exp2(0,2), (Binary(v[0][2])*Binary(v[1][2])))+Const(exp2(0,3), (Binary(v[0][3])*Binary(v[1][3])))+Const(exp2(0,4), (Binary(v[0][4])*Binary(v[1][4])))+Const(exp2(0,0), (Binary(v[0][0])*Binary(v[2][0])))+Const(exp2(0,1), (Binary(v[0][1])*Binary(v[2][1])))+Const(exp2(0,2), (Binary(v[0][2])*Binary(v[2][2])))+Const(exp2(0,3), (Binary(v[0][3])*Binary(v[2][3])))+Const(exp2(0,4), (Binary(v[0][4])*Binary(v[2][4])))+Const(exp2(0,0), (Binary(v[0][0])*Binary(v[3][0])))+Const(exp2(0,1), (Binary(v[0][1])*Binary(v[3][1])))+Const(exp2(0,2), (Binary(v[0][2])*Binary(v[3][2])))+Const(exp2(0,3), (Binary(v[0][3])*Binary(v[3][3])))+Const(exp2(0,4), (Binary(v[0][4])*Binary(v[3][4])))+Const(exp2(0,0), (Binary(v[0][0])*Binary(v[4][0])))+Const(exp2(0,1), (Binary(v[0][1])*Binary(v[4][1])))+Const(exp2(0,2), (Binary(v[0][2])*Binary(v[4][2])))+Const(exp2(0,3), (Binary(v[0][3])*Binary(v[4][3])))+Const(exp2(0,4), (Binary(v[0][4])*Binary(v[4][4])))+Const(exp2(1,0), (Binary(v[1][0])*Binary(v[0][0])))+Const(exp2(1,1), (Binary(v[1][1])*Binary(v[0][1])))+Const(exp2(1,2), (Binary(v[1][2])*Binary(v[0][2])))+Const(exp2(1,3), (Binary(v[1][3])*Binary(v[0][3])))+Const(exp2(1,4), (Binary(v[1][4])*Binary(v[0][4])))+Const(exp2(1,0), (Binary(v[1][0])*Binary(v[2][0])))+Const(exp2(1,1), (Binary(v[1][1])*Binary(v[2][1])))+Const(exp2(1,2), (Binary(v[1][2])*Binary(v[2][2])))+Const(exp2(1,3), (Binary(v[1][3])*Binary(v[2][3])))+Const(exp2(1,4), (Binary(v[1][4])*Binary(v[2][4])))+Const(exp2(1,0), (Binary(v[1][0])*Binary(v[3][0])))+Const(exp2(1,1), (Binary(v[1][1])*Binary(v[3][1])))+Const(exp2(1,2), (Binary(v[1][2])*Binary(v[3][2])))+Const(exp2(1,3), (Binary(v[1][3])*Binary(v[3][3])))+Const(exp2(1,4), (Binary(v[1][4])*Binary(v[3][4])))+Const(exp2(1,0), (Binary(v[1][0])*Binary(v[4][0])))+Const(exp2(1,1), (Binary(v[1][1])*Binary(v[4][1])))+Const(exp2(1,2), (Binary(v[1][2])*Binary(v[4][2])))+Const(exp2(1,3), (Binary(v[1][3])*Binary(v[4][3])))+Const(exp2(1,4), (Binary(v[1][4])*Binary(v[4][4])))+Const(exp2(2,0), (Binary(v[2][0])*Binary(v[0][0])))+Const(exp2(2,1), (Binary(v[2][1])*Binary(v[0][1])))+Const(exp2(2,2), (Binary(v[2][2])*Binary(v[0][2])))+Const(exp2(2,3), (Binary(v[2][3])*Binary(v[0][3])))+Const(exp2(2,4), (Binary(v[2][4])*Binary(v[0][4])))+Const(exp2(2,0), (Binary(v[2][0])*Binary(v[1][0])))+Const(exp2(2,1), (Binary(v[2][1])*Binary(v[1][1])))+Const(exp2(2,2), (Binary(v[2][2])*Binary(v[1][2])))+Const(exp2(2,3), (Binary(v[2][3])*Binary(v[1][3])))+Const(exp2(2,4), (Binary(v[2][4])*Binary(v[1][4])))+Const(exp2(2,0), (Binary(v[2][0])*Binary(v[3][0])))+Const(exp2(2,1), (Binary(v[2][1])*Binary(v[3][1])))+Const(exp2(2,2), (Binary(v[2][2])*Binary(v[3][2])))+Const(exp2(2,3), (Binary(v[2][3])*Binary(v[3][3])))+Const(exp2(2,4), (Binary(v[2][4])*Binary(v[3][4])))+Const(exp2(2,0), (Binary(v[2][0])*Binary(v[4][0])))+Const(exp2(2,1), (Binary(v[2][1])*Binary(v[4][1])))+Const(exp2(2,2), (Binary(v[2][2])*Binary(v[4][2])))+Const(exp2(2,3), (Binary(v[2][3])*Binary(v[4][3])))+Const(exp2(2,4), (Binary(v[2][4])*Binary(v[4][4])))+Const(exp2(3,0), (Binary(v[3][0])*Binary(v[0][0])))+Const(exp2(3,1), (Binary(v[3][1])*Binary(v[0][1])))+Const(exp2(3,2), (Binary(v[3][2])*Binary(v[0][2])))+Const(exp2(3,3), (Binary(v[3][3])*Binary(v[0][3])))+Const(exp2(3,4), (Binary(v[3][4])*Binary(v[0][4])))+Const(exp2(3,0), (Binary(v[3][0])*Binary(v[1][0])))+Const(exp2(3,1), (Binary(v[3][1])*Binary(v[1][1])))+Const(exp2(3,2), (Binary(v[3][2])*Binary(v[1][2])))+Const(exp2(3,3), (Binary(v[3][3])*Binary(v[1][3])))+Const(exp2(3,4), (Binary(v[3][4])*Binary(v[1][4])))+Const(exp2(3,0), (Binary(v[3][0])*Binary(v[2][0])))+Const(exp2(3,1), (Binary(v[3][1])*Binary(v[2][1])))+Const(exp2(3,2), (Binary(v[3][2])*Binary(v[2][2])))+Const(exp2(3,3), (Binary(v[3][3])*Binary(v[2][3])))+Const(exp2(3,4), (Binary(v[3][4])*Binary(v[2][4])))+Const(exp2(3,0), (Binary(v[3][0])*Binary(v[4][0])))+Const(exp2(3,1), (Binary(v[3][1])*Binary(v[4][1])))+Const(exp2(3,2), (Binary(v[3][2])*Binary(v[4][2])))+Const(exp2(3,3), (Binary(v[3][3])*Binary(v[4][3])))+Const(exp2(3,4), (Binary(v[3][4])*Binary(v[4][4])))+Const(exp2(4,0), (Binary(v[4][0])*Binary(v[0][0])))+Const(exp2(4,1), (Binary(v[4][1])*Binary(v[0][1])))+Const(exp2(4,2), (Binary(v[4][2])*Binary(v[0][2])))+Const(exp2(4,3), (Binary(v[4][3])*Binary(v[0][3])))+Const(exp2(4,4), (Binary(v[4][4])*Binary(v[0][4])))+Const(exp2(4,0), (Binary(v[4][0])*Binary(v[1][0])))+Const(exp2(4,1), (Binary(v[4][1])*Binary(v[1][1])))+Const(exp2(4,2), (Binary(v[4][2])*Binary(v[1][2])))+Const(exp2(4,3), (Binary(v[4][3])*Binary(v[1][3])))+Const(exp2(4,4), (Binary(v[4][4])*Binary(v[1][4])))+Const(exp2(4,0), (Binary(v[4][0])*Binary(v[2][0])))+Const(exp2(4,1), (Binary(v[4][1])*Binary(v[2][1])))+Const(exp2(4,2), (Binary(v[4][2])*Binary(v[2][2])))+Const(exp2(4,3), (Binary(v[4][3])*Binary(v[2][3])))+Const(exp2(4,4), (Binary(v[4][4])*Binary(v[2][4])))+Const(exp2(4,0), (Binary(v[4][0])*Binary(v[3][0])))+Const(exp2(4,1), (Binary(v[4][1])*Binary(v[3][1])))+Const(exp2(4,2), (Binary(v[4][2])*Binary(v[3][2])))+Const(exp2(4,3), (Binary(v[4][3])*Binary(v[3][3])))+Const(exp2(4,4), (Binary(v[4][4])*Binary(v[3][4]))))*Num(56.92100138303083))))
--------------------------------------------------------------------
3rd expression:
--------------------------------------------------------------------
(Const(exp3(0,0), (Binary(v[0][0])*Binary(v[0][1])))+Const(exp3(0,0), (Binary(v[0][0])*Binary(v[0][2])))+Const(exp3(0,0), (Binary(v[0][0])*Binary(v[0][3])))+Const(exp3(0,0), (Binary(v[0][0])*Binary(v[0][4])))+Const(exp3(0,1), (Binary(v[0][1])*Binary(v[0][0])))+Const(exp3(0,1), (Binary(v[0][1])*Binary(v[0][2])))+Const(exp3(0,1), (Binary(v[0][1])*Binary(v[0][3])))+Const(exp3(0,1), (Binary(v[0][1])*Binary(v[0][4])))+Const(exp3(0,2), (Binary(v[0][2])*Binary(v[0][0])))+Const(exp3(0,2), (Binary(v[0][2])*Binary(v[0][1])))+Const(exp3(0,2), (Binary(v[0][2])*Binary(v[0][3])))+Const(exp3(0,2), (Binary(v[0][2])*Binary(v[0][4])))+Const(exp3(0,3), (Binary(v[0][3])*Binary(v[0][0])))+Const(exp3(0,3), (Binary(v[0][3])*Binary(v[0][1])))+Const(exp3(0,3), (Binary(v[0][3])*Binary(v[0][2])))+Const(exp3(0,3), (Binary(v[0][3])*Binary(v[0][4])))+Const(exp3(0,4), (Binary(v[0][4])*Binary(v[0][0])))+Const(exp3(0,4), (Binary(v[0][4])*Binary(v[0][1])))+Const(exp3(0,4), (Binary(v[0][4])*Binary(v[0][2])))+Const(exp3(0,4), (Binary(v[0][4])*Binary(v[0][3])))+Const(exp3(1,0), (Binary(v[1][0])*Binary(v[1][1])))+Const(exp3(1,0), (Binary(v[1][0])*Binary(v[1][2])))+Const(exp3(1,0), (Binary(v[1][0])*Binary(v[1][3])))+Const(exp3(1,0), (Binary(v[1][0])*Binary(v[1][4])))+Const(exp3(1,1), (Binary(v[1][1])*Binary(v[1][0])))+Const(exp3(1,1), (Binary(v[1][1])*Binary(v[1][2])))+Const(exp3(1,1), (Binary(v[1][1])*Binary(v[1][3])))+Const(exp3(1,1), (Binary(v[1][1])*Binary(v[1][4])))+Const(exp3(1,2), (Binary(v[1][2])*Binary(v[1][0])))+Const(exp3(1,2), (Binary(v[1][2])*Binary(v[1][1])))+Const(exp3(1,2), (Binary(v[1][2])*Binary(v[1][3])))+Const(exp3(1,2), (Binary(v[1][2])*Binary(v[1][4])))+Const(exp3(1,3), (Binary(v[1][3])*Binary(v[1][0])))+Const(exp3(1,3), (Binary(v[1][3])*Binary(v[1][1])))+Const(exp3(1,3), (Binary(v[1][3])*Binary(v[1][2])))+Const(exp3(1,3), (Binary(v[1][3])*Binary(v[1][4])))+Const(exp3(1,4), (Binary(v[1][4])*Binary(v[1][0])))+Const(exp3(1,4), (Binary(v[1][4])*Binary(v[1][1])))+Const(exp3(1,4), (Binary(v[1][4])*Binary(v[1][2])))+Const(exp3(1,4), (Binary(v[1][4])*Binary(v[1][3])))+Const(exp3(2,0), (Binary(v[2][0])*Binary(v[2][1])))+Const(exp3(2,0), (Binary(v[2][0])*Binary(v[2][2])))+Const(exp3(2,0), (Binary(v[2][0])*Binary(v[2][3])))+Const(exp3(2,0), (Binary(v[2][0])*Binary(v[2][4])))+Const(exp3(2,1), (Binary(v[2][1])*Binary(v[2][0])))+Const(exp3(2,1), (Binary(v[2][1])*Binary(v[2][2])))+Const(exp3(2,1), (Binary(v[2][1])*Binary(v[2][3])))+Const(exp3(2,1), (Binary(v[2][1])*Binary(v[2][4])))+Const(exp3(2,2), (Binary(v[2][2])*Binary(v[2][0])))+Const(exp3(2,2), (Binary(v[2][2])*Binary(v[2][1])))+Const(exp3(2,2), (Binary(v[2][2])*Binary(v[2][3])))+Const(exp3(2,2), (Binary(v[2][2])*Binary(v[2][4])))+Const(exp3(2,3), (Binary(v[2][3])*Binary(v[2][0])))+Const(exp3(2,3), (Binary(v[2][3])*Binary(v[2][1])))+Const(exp3(2,3), (Binary(v[2][3])*Binary(v[2][2])))+Const(exp3(2,3), (Binary(v[2][3])*Binary(v[2][4])))+Const(exp3(2,4), (Binary(v[2][4])*Binary(v[2][0])))+Const(exp3(2,4), (Binary(v[2][4])*Binary(v[2][1])))+Const(exp3(2,4), (Binary(v[2][4])*Binary(v[2][2])))+Const(exp3(2,4), (Binary(v[2][4])*Binary(v[2][3])))+Const(exp3(3,0), (Binary(v[3][0])*Binary(v[3][1])))+Const(exp3(3,0), (Binary(v[3][0])*Binary(v[3][2])))+Const(exp3(3,0), (Binary(v[3][0])*Binary(v[3][3])))+Const(exp3(3,0), (Binary(v[3][0])*Binary(v[3][4])))+Const(exp3(3,1), (Binary(v[3][1])*Binary(v[3][0])))+Const(exp3(3,1), (Binary(v[3][1])*Binary(v[3][2])))+Const(exp3(3,1), (Binary(v[3][1])*Binary(v[3][3])))+Const(exp3(3,1), (Binary(v[3][1])*Binary(v[3][4])))+Const(exp3(3,2), (Binary(v[3][2])*Binary(v[3][0])))+Const(exp3(3,2), (Binary(v[3][2])*Binary(v[3][1])))+Const(exp3(3,2), (Binary(v[3][2])*Binary(v[3][3])))+Const(exp3(3,2), (Binary(v[3][2])*Binary(v[3][4])))+Const(exp3(3,3), (Binary(v[3][3])*Binary(v[3][0])))+Const(exp3(3,3), (Binary(v[3][3])*Binary(v[3][1])))+Const(exp3(3,3), (Binary(v[3][3])*Binary(v[3][2])))+Const(exp3(3,3), (Binary(v[3][3])*Binary(v[3][4])))+Const(exp3(3,4), (Binary(v[3][4])*Binary(v[3][0])))+Const(exp3(3,4), (Binary(v[3][4])*Binary(v[3][1])))+Const(exp3(3,4), (Binary(v[3][4])*Binary(v[3][2])))+Const(exp3(3,4), (Binary(v[3][4])*Binary(v[3][3])))+Const(exp3(4,0), (Binary(v[4][0])*Binary(v[4][1])))+Const(exp3(4,0), (Binary(v[4][0])*Binary(v[4][2])))+Const(exp3(4,0), (Binary(v[4][0])*Binary(v[4][3])))+Const(exp3(4,0), (Binary(v[4][0])*Binary(v[4][4])))+Const(exp3(4,1), (Binary(v[4][1])*Binary(v[4][0])))+Const(exp3(4,1), (Binary(v[4][1])*Binary(v[4][2])))+Const(exp3(4,1), (Binary(v[4][1])*Binary(v[4][3])))+Const(exp3(4,1), (Binary(v[4][1])*Binary(v[4][4])))+Const(exp3(4,2), (Binary(v[4][2])*Binary(v[4][0])))+Const(exp3(4,2), (Binary(v[4][2])*Binary(v[4][1])))+Const(exp3(4,2), (Binary(v[4][2])*Binary(v[4][3])))+Const(exp3(4,2), (Binary(v[4][2])*Binary(v[4][4])))+Const(exp3(4,3), (Binary(v[4][3])*Binary(v[4][0])))+Const(exp3(4,3), (Binary(v[4][3])*Binary(v[4][1])))+Const(exp3(4,3), (Binary(v[4][3])*Binary(v[4][2])))+Const(exp3(4,3), (Binary(v[4][3])*Binary(v[4][4])))+Const(exp3(4,4), (Binary(v[4][4])*Binary(v[4][0])))+Const(exp3(4,4), (Binary(v[4][4])*Binary(v[4][1])))+Const(exp3(4,4), (Binary(v[4][4])*Binary(v[4][2])))+Const(exp3(4,4), (Binary(v[4][4])*Binary(v[4][3])))+Const(exp3(4,4), ((Const(exp3(0,0), (Binary(v[0][0])*Binary(v[0][1])))+Const(exp3(0,0), (Binary(v[0][0])*Binary(v[0][2])))+Const(exp3(0,0), (Binary(v[0][0])*Binary(v[0][3])))+Const(exp3(0,0), (Binary(v[0][0])*Binary(v[0][4])))+Const(exp3(0,1), (Binary(v[0][1])*Binary(v[0][0])))+Const(exp3(0,1), (Binary(v[0][1])*Binary(v[0][2])))+Const(exp3(0,1), (Binary(v[0][1])*Binary(v[0][3])))+Const(exp3(0,1), (Binary(v[0][1])*Binary(v[0][4])))+Const(exp3(0,2), (Binary(v[0][2])*Binary(v[0][0])))+Const(exp3(0,2), (Binary(v[0][2])*Binary(v[0][1])))+Const(exp3(0,2), (Binary(v[0][2])*Binary(v[0][3])))+Const(exp3(0,2), (Binary(v[0][2])*Binary(v[0][4])))+Const(exp3(0,3), (Binary(v[0][3])*Binary(v[0][0])))+Const(exp3(0,3), (Binary(v[0][3])*Binary(v[0][1])))+Const(exp3(0,3), (Binary(v[0][3])*Binary(v[0][2])))+Const(exp3(0,3), (Binary(v[0][3])*Binary(v[0][4])))+Const(exp3(0,4), (Binary(v[0][4])*Binary(v[0][0])))+Const(exp3(0,4), (Binary(v[0][4])*Binary(v[0][1])))+Const(exp3(0,4), (Binary(v[0][4])*Binary(v[0][2])))+Const(exp3(0,4), (Binary(v[0][4])*Binary(v[0][3])))+Const(exp3(1,0), (Binary(v[1][0])*Binary(v[1][1])))+Const(exp3(1,0), (Binary(v[1][0])*Binary(v[1][2])))+Const(exp3(1,0), (Binary(v[1][0])*Binary(v[1][3])))+Const(exp3(1,0), (Binary(v[1][0])*Binary(v[1][4])))+Const(exp3(1,1), (Binary(v[1][1])*Binary(v[1][0])))+Const(exp3(1,1), (Binary(v[1][1])*Binary(v[1][2])))+Const(exp3(1,1), (Binary(v[1][1])*Binary(v[1][3])))+Const(exp3(1,1), (Binary(v[1][1])*Binary(v[1][4])))+Const(exp3(1,2), (Binary(v[1][2])*Binary(v[1][0])))+Const(exp3(1,2), (Binary(v[1][2])*Binary(v[1][1])))+Const(exp3(1,2), (Binary(v[1][2])*Binary(v[1][3])))+Const(exp3(1,2), (Binary(v[1][2])*Binary(v[1][4])))+Const(exp3(1,3), (Binary(v[1][3])*Binary(v[1][0])))+Const(exp3(1,3), (Binary(v[1][3])*Binary(v[1][1])))+Const(exp3(1,3), (Binary(v[1][3])*Binary(v[1][2])))+Const(exp3(1,3), (Binary(v[1][3])*Binary(v[1][4])))+Const(exp3(1,4), (Binary(v[1][4])*Binary(v[1][0])))+Const(exp3(1,4), (Binary(v[1][4])*Binary(v[1][1])))+Const(exp3(1,4), (Binary(v[1][4])*Binary(v[1][2])))+Const(exp3(1,4), (Binary(v[1][4])*Binary(v[1][3])))+Const(exp3(2,0), (Binary(v[2][0])*Binary(v[2][1])))+Const(exp3(2,0), (Binary(v[2][0])*Binary(v[2][2])))+Const(exp3(2,0), (Binary(v[2][0])*Binary(v[2][3])))+Const(exp3(2,0), (Binary(v[2][0])*Binary(v[2][4])))+Const(exp3(2,1), (Binary(v[2][1])*Binary(v[2][0])))+Const(exp3(2,1), (Binary(v[2][1])*Binary(v[2][2])))+Const(exp3(2,1), (Binary(v[2][1])*Binary(v[2][3])))+Const(exp3(2,1), (Binary(v[2][1])*Binary(v[2][4])))+Const(exp3(2,2), (Binary(v[2][2])*Binary(v[2][0])))+Const(exp3(2,2), (Binary(v[2][2])*Binary(v[2][1])))+Const(exp3(2,2), (Binary(v[2][2])*Binary(v[2][3])))+Const(exp3(2,2), (Binary(v[2][2])*Binary(v[2][4])))+Const(exp3(2,3), (Binary(v[2][3])*Binary(v[2][0])))+Const(exp3(2,3), (Binary(v[2][3])*Binary(v[2][1])))+Const(exp3(2,3), (Binary(v[2][3])*Binary(v[2][2])))+Const(exp3(2,3), (Binary(v[2][3])*Binary(v[2][4])))+Const(exp3(2,4), (Binary(v[2][4])*Binary(v[2][0])))+Const(exp3(2,4), (Binary(v[2][4])*Binary(v[2][1])))+Const(exp3(2,4), (Binary(v[2][4])*Binary(v[2][2])))+Const(exp3(2,4), (Binary(v[2][4])*Binary(v[2][3])))+Const(exp3(3,0), (Binary(v[3][0])*Binary(v[3][1])))+Const(exp3(3,0), (Binary(v[3][0])*Binary(v[3][2])))+Const(exp3(3,0), (Binary(v[3][0])*Binary(v[3][3])))+Const(exp3(3,0), (Binary(v[3][0])*Binary(v[3][4])))+Const(exp3(3,1), (Binary(v[3][1])*Binary(v[3][0])))+Const(exp3(3,1), (Binary(v[3][1])*Binary(v[3][2])))+Const(exp3(3,1), (Binary(v[3][1])*Binary(v[3][3])))+Const(exp3(3,1), (Binary(v[3][1])*Binary(v[3][4])))+Const(exp3(3,2), (Binary(v[3][2])*Binary(v[3][0])))+Const(exp3(3,2), (Binary(v[3][2])*Binary(v[3][1])))+Const(exp3(3,2), (Binary(v[3][2])*Binary(v[3][3])))+Const(exp3(3,2), (Binary(v[3][2])*Binary(v[3][4])))+Const(exp3(3,3), (Binary(v[3][3])*Binary(v[3][0])))+Const(exp3(3,3), (Binary(v[3][3])*Binary(v[3][1])))+Const(exp3(3,3), (Binary(v[3][3])*Binary(v[3][2])))+Const(exp3(3,3), (Binary(v[3][3])*Binary(v[3][4])))+Const(exp3(3,4), (Binary(v[3][4])*Binary(v[3][0])))+Const(exp3(3,4), (Binary(v[3][4])*Binary(v[3][1])))+Const(exp3(3,4), (Binary(v[3][4])*Binary(v[3][2])))+Const(exp3(3,4), (Binary(v[3][4])*Binary(v[3][3])))+Const(exp3(4,0), (Binary(v[4][0])*Binary(v[4][1])))+Const(exp3(4,0), (Binary(v[4][0])*Binary(v[4][2])))+Const(exp3(4,0), (Binary(v[4][0])*Binary(v[4][3])))+Const(exp3(4,0), (Binary(v[4][0])*Binary(v[4][4])))+Const(exp3(4,1), (Binary(v[4][1])*Binary(v[4][0])))+Const(exp3(4,1), (Binary(v[4][1])*Binary(v[4][2])))+Const(exp3(4,1), (Binary(v[4][1])*Binary(v[4][3])))+Const(exp3(4,1), (Binary(v[4][1])*Binary(v[4][4])))+Const(exp3(4,2), (Binary(v[4][2])*Binary(v[4][0])))+Const(exp3(4,2), (Binary(v[4][2])*Binary(v[4][1])))+Const(exp3(4,2), (Binary(v[4][2])*Binary(v[4][3])))+Const(exp3(4,2), (Binary(v[4][2])*Binary(v[4][4])))+Const(exp3(4,3), (Binary(v[4][3])*Binary(v[4][0])))+Const(exp3(4,3), (Binary(v[4][3])*Binary(v[4][1])))+Const(exp3(4,3), (Binary(v[4][3])*Binary(v[4][2])))+Const(exp3(4,3), (Binary(v[4][3])*Binary(v[4][4])))+Const(exp3(4,4), (Binary(v[4][4])*Binary(v[4][0])))+Const(exp3(4,4), (Binary(v[4][4])*Binary(v[4][1])))+Const(exp3(4,4), (Binary(v[4][4])*Binary(v[4][2])))+Const(exp3(4,4), (Binary(v[4][4])*Binary(v[4][3]))))*Num(56.92100138303083))))
--------------------------------------------------------------------
4th expression:
--------------------------------------------------------------------
(Const(exp4(0,0), ((Binary(v[0][0])*Num(2.23606797749979))*Binary(v[1][1])))+Const(exp4(0,1), ((Binary(v[0][1])*Num(2.23606797749979))*Binary(v[1][2])))+Const(exp4(0,2), ((Binary(v[0][2])*Num(2.23606797749979))*Binary(v[1][3])))+Const(exp4(0,3), ((Binary(v[0][3])*Num(2.23606797749979))*Binary(v[1][4])))+Const(exp4(0,0), ((Binary(v[0][0])*Num(3.1622776601683795))*Binary(v[2][1])))+Const(exp4(0,1), ((Binary(v[0][1])*Num(3.1622776601683795))*Binary(v[2][2])))+Const(exp4(0,2), ((Binary(v[0][2])*Num(3.1622776601683795))*Binary(v[2][3])))+Const(exp4(0,3), ((Binary(v[0][3])*Num(3.1622776601683795))*Binary(v[2][4])))+Const(exp4(0,0), ((Binary(v[0][0])*Num(2.0))*Binary(v[3][1])))+Const(exp4(0,1), ((Binary(v[0][1])*Num(2.0))*Binary(v[3][2])))+Const(exp4(0,2), ((Binary(v[0][2])*Num(2.0))*Binary(v[3][3])))+Const(exp4(0,3), ((Binary(v[0][3])*Num(2.0))*Binary(v[3][4])))+Const(exp4(0,0), ((Binary(v[0][0])*Num(0.0))*Binary(v[4][1])))+Const(exp4(0,1), ((Binary(v[0][1])*Num(0.0))*Binary(v[4][2])))+Const(exp4(0,2), ((Binary(v[0][2])*Num(0.0))*Binary(v[4][3])))+Const(exp4(0,3), ((Binary(v[0][3])*Num(0.0))*Binary(v[4][4])))+Const(exp4(1,0), ((Binary(v[1][0])*Num(2.23606797749979))*Binary(v[0][1])))+Const(exp4(1,1), ((Binary(v[1][1])*Num(2.23606797749979))*Binary(v[0][2])))+Const(exp4(1,2), ((Binary(v[1][2])*Num(2.23606797749979))*Binary(v[0][3])))+Const(exp4(1,3), ((Binary(v[1][3])*Num(2.23606797749979))*Binary(v[0][4])))+Const(exp4(1,0), ((Binary(v[1][0])*Num(2.23606797749979))*Binary(v[2][1])))+Const(exp4(1,1), ((Binary(v[1][1])*Num(2.23606797749979))*Binary(v[2][2])))+Const(exp4(1,2), ((Binary(v[1][2])*Num(2.23606797749979))*Binary(v[2][3])))+Const(exp4(1,3), ((Binary(v[1][3])*Num(2.23606797749979))*Binary(v[2][4])))+Const(exp4(1,0), ((Binary(v[1][0])*Num(2.23606797749979))*Binary(v[3][1])))+Const(exp4(1,1), ((Binary(v[1][1])*Num(2.23606797749979))*Binary(v[3][2])))+Const(exp4(1,2), ((Binary(v[1][2])*Num(2.23606797749979))*Binary(v[3][3])))+Const(exp4(1,3), ((Binary(v[1][3])*Num(2.23606797749979))*Binary(v[3][4])))+Const(exp4(1,0), ((Binary(v[1][0])*Num(2.23606797749979))*Binary(v[4][1])))+Const(exp4(1,1), ((Binary(v[1][1])*Num(2.23606797749979))*Binary(v[4][2])))+Const(exp4(1,2), ((Binary(v[1][2])*Num(2.23606797749979))*Binary(v[4][3])))+Const(exp4(1,3), ((Binary(v[1][3])*Num(2.23606797749979))*Binary(v[4][4])))+Const(exp4(2,0), ((Binary(v[2][0])*Num(3.1622776601683795))*Binary(v[0][1])))+Const(exp4(2,1), ((Binary(v[2][1])*Num(3.1622776601683795))*Binary(v[0][2])))+Const(exp4(2,2), ((Binary(v[2][2])*Num(3.1622776601683795))*Binary(v[0][3])))+Const(exp4(2,3), ((Binary(v[2][3])*Num(3.1622776601683795))*Binary(v[0][4])))+Const(exp4(2,0), ((Binary(v[2][0])*Num(2.23606797749979))*Binary(v[1][1])))+Const(exp4(2,1), ((Binary(v[2][1])*Num(2.23606797749979))*Binary(v[1][2])))+Const(exp4(2,2), ((Binary(v[2][2])*Num(2.23606797749979))*Binary(v[1][3])))+Const(exp4(2,3), ((Binary(v[2][3])*Num(2.23606797749979))*Binary(v[1][4])))+Const(exp4(2,0), ((Binary(v[2][0])*Num(1.4142135623730951))*Binary(v[3][1])))+Const(exp4(2,1), ((Binary(v[2][1])*Num(1.4142135623730951))*Binary(v[3][2])))+Const(exp4(2,2), ((Binary(v[2][2])*Num(1.4142135623730951))*Binary(v[3][3])))+Const(exp4(2,3), ((Binary(v[2][3])*Num(1.4142135623730951))*Binary(v[3][4])))+Const(exp4(2,0), ((Binary(v[2][0])*Num(3.1622776601683795))*Binary(v[4][1])))+Const(exp4(2,1), ((Binary(v[2][1])*Num(3.1622776601683795))*Binary(v[4][2])))+Const(exp4(2,2), ((Binary(v[2][2])*Num(3.1622776601683795))*Binary(v[4][3])))+Const(exp4(2,3), ((Binary(v[2][3])*Num(3.1622776601683795))*Binary(v[4][4])))+Const(exp4(3,0), ((Binary(v[3][0])*Num(2.0))*Binary(v[0][1])))+Const(exp4(3,1), ((Binary(v[3][1])*Num(2.0))*Binary(v[0][2])))+Const(exp4(3,2), ((Binary(v[3][2])*Num(2.0))*Binary(v[0][3])))+Const(exp4(3,3), ((Binary(v[3][3])*Num(2.0))*Binary(v[0][4])))+Const(exp4(3,0), ((Binary(v[3][0])*Num(2.23606797749979))*Binary(v[1][1])))+Const(exp4(3,1), ((Binary(v[3][1])*Num(2.23606797749979))*Binary(v[1][2])))+Const(exp4(3,2), ((Binary(v[3][2])*Num(2.23606797749979))*Binary(v[1][3])))+Const(exp4(3,3), ((Binary(v[3][3])*Num(2.23606797749979))*Binary(v[1][4])))+Const(exp4(3,0), ((Binary(v[3][0])*Num(1.4142135623730951))*Binary(v[2][1])))+Const(exp4(3,1), ((Binary(v[3][1])*Num(1.4142135623730951))*Binary(v[2][2])))+Const(exp4(3,2), ((Binary(v[3][2])*Num(1.4142135623730951))*Binary(v[2][3])))+Const(exp4(3,3), ((Binary(v[3][3])*Num(1.4142135623730951))*Binary(v[2][4])))+Const(exp4(3,0), ((Binary(v[3][0])*Num(2.0))*Binary(v[4][1])))+Const(exp4(3,1), ((Binary(v[3][1])*Num(2.0))*Binary(v[4][2])))+Const(exp4(3,2), ((Binary(v[3][2])*Num(2.0))*Binary(v[4][3])))+Const(exp4(3,3), ((Binary(v[3][3])*Num(2.0))*Binary(v[4][4])))+Const(exp4(4,0), ((Binary(v[4][0])*Num(0.0))*Binary(v[0][1])))+Const(exp4(4,1), ((Binary(v[4][1])*Num(0.0))*Binary(v[0][2])))+Const(exp4(4,2), ((Binary(v[4][2])*Num(0.0))*Binary(v[0][3])))+Const(exp4(4,3), ((Binary(v[4][3])*Num(0.0))*Binary(v[0][4])))+Const(exp4(4,0), ((Binary(v[4][0])*Num(2.23606797749979))*Binary(v[1][1])))+Const(exp4(4,1), ((Binary(v[4][1])*Num(2.23606797749979))*Binary(v[1][2])))+Const(exp4(4,2), ((Binary(v[4][2])*Num(2.23606797749979))*Binary(v[1][3])))+Const(exp4(4,3), ((Binary(v[4][3])*Num(2.23606797749979))*Binary(v[1][4])))+Const(exp4(4,0), ((Binary(v[4][0])*Num(3.1622776601683795))*Binary(v[2][1])))+Const(exp4(4,1), ((Binary(v[4][1])*Num(3.1622776601683795))*Binary(v[2][2])))+Const(exp4(4,2), ((Binary(v[4][2])*Num(3.1622776601683795))*Binary(v[2][3])))+Const(exp4(4,3), ((Binary(v[4][3])*Num(3.1622776601683795))*Binary(v[2][4])))+Const(exp4(4,0), ((Binary(v[4][0])*Num(2.0))*Binary(v[3][1])))+Const(exp4(4,1), ((Binary(v[4][1])*Num(2.0))*Binary(v[3][2])))+Const(exp4(4,2), ((Binary(v[4][2])*Num(2.0))*Binary(v[3][3])))+Const(exp4(4,3), ((Binary(v[4][3])*Num(2.0))*Binary(v[3][4]))))
--------------------------------------------------------------------

QUBO:

--------------------------------------------------------------------
{('v[0][0]', 'v[1][0]'): 115.84200276606165, ('v[0][0]', 'v[2][0]'): 115.84200276606165, ('v[0][0]', 'v[3][0]'): 115.84200276606165, ('v[0][0]', 'v[4][0]'): 115.84200276606165, ('v[0][0]', 'v[0][1]'): 115.84200276606165, ('v[0][0]', 'v[0][2]'): 115.84200276606165, ('v[0][0]', 'v[0][3]'): 115.84200276606165, ('v[0][0]', 'v[0][4]'): 115.84200276606165, ('v[0][0]', 'v[1][1]'): 2.23606797749979, ('v[0][0]', 'v[2][1]'): 3.1622776601683795, ('v[0][0]', 'v[3][1]'): 2.0, ('v[0][0]', 'v[4][1]'): 0.0, ('v[0][1]', 'v[1][1]'): 115.84200276606165, ('v[0][1]', 'v[2][1]'): 115.84200276606165, ('v[0][1]', 'v[3][1]'): 115.84200276606165, ('v[0][1]', 'v[4][1]'): 115.84200276606165, ('v[0][1]', 'v[0][2]'): 115.84200276606165, ('v[0][1]', 'v[0][3]'): 115.84200276606165, ('v[0][1]', 'v[0][4]'): 115.84200276606165, ('v[0][1]', 'v[1][2]'): 2.23606797749979, ('v[0][1]', 'v[2][2]'): 3.1622776601683795, ('v[0][1]', 'v[3][2]'): 2.0, ('v[0][1]', 'v[4][2]'): 0.0, ('v[0][1]', 'v[1][0]'): 2.23606797749979, ('v[0][1]', 'v[2][0]'): 3.1622776601683795, ('v[0][1]', 'v[3][0]'): 2.0, ('v[0][1]', 'v[4][0]'): 0.0, ('v[0][2]', 'v[1][2]'): 115.84200276606165, ('v[0][2]', 'v[2][2]'): 115.84200276606165, ('v[0][2]', 'v[3][2]'): 115.84200276606165, ('v[0][2]', 'v[4][2]'): 115.84200276606165, ('v[0][2]', 'v[0][3]'): 115.84200276606165, ('v[0][2]', 'v[0][4]'): 115.84200276606165, ('v[0][2]', 'v[1][3]'): 2.23606797749979, ('v[0][2]', 'v[2][3]'): 3.1622776601683795, ('v[0][2]', 'v[3][3]'): 2.0, ('v[0][2]', 'v[4][3]'): 0.0, ('v[0][2]', 'v[1][1]'): 2.23606797749979, ('v[0][2]', 'v[2][1]'): 3.1622776601683795, ('v[0][2]', 'v[3][1]'): 2.0, ('v[0][2]', 'v[4][1]'): 0.0, ('v[0][3]', 'v[1][3]'): 115.84200276606165, ('v[0][3]', 'v[2][3]'): 115.84200276606165, ('v[0][3]', 'v[3][3]'): 115.84200276606165, ('v[0][3]', 'v[4][3]'): 115.84200276606165, ('v[0][3]', 'v[0][4]'): 115.84200276606165, ('v[0][3]', 'v[1][4]'): 2.23606797749979, ('v[0][3]', 'v[2][4]'): 3.1622776601683795, ('v[0][3]', 'v[3][4]'): 2.0, ('v[0][3]', 'v[4][4]'): 0.0, ('v[0][3]', 'v[1][2]'): 2.23606797749979, ('v[0][3]', 'v[2][2]'): 3.1622776601683795, ('v[0][3]', 'v[3][2]'): 2.0, ('v[0][3]', 'v[4][2]'): 0.0, ('v[0][4]', 'v[1][4]'): 115.84200276606165, ('v[0][4]', 'v[2][4]'): 115.84200276606165, ('v[0][4]', 'v[3][4]'): 115.84200276606165, ('v[0][4]', 'v[4][4]'): 115.84200276606165, ('v[0][4]', 'v[1][3]'): 2.23606797749979, ('v[0][4]', 'v[2][3]'): 3.1622776601683795, ('v[0][4]', 'v[3][3]'): 2.0, ('v[0][4]', 'v[4][3]'): 0.0, ('v[1][0]', 'v[2][0]'): 115.84200276606165, ('v[1][0]', 'v[3][0]'): 115.84200276606165, ('v[1][0]', 'v[4][0]'): 115.84200276606165, ('v[1][0]', 'v[1][1]'): 115.84200276606165, ('v[1][0]', 'v[1][2]'): 115.84200276606165, ('v[1][0]', 'v[1][3]'): 115.84200276606165, ('v[1][0]', 'v[1][4]'): 115.84200276606165, ('v[1][0]', 'v[2][1]'): 2.23606797749979, ('v[1][0]', 'v[3][1]'): 2.23606797749979, ('v[1][0]', 'v[4][1]'): 2.23606797749979, ('v[1][1]', 'v[2][1]'): 115.84200276606165, ('v[1][1]', 'v[3][1]'): 115.84200276606165, ('v[1][1]', 'v[4][1]'): 115.84200276606165, ('v[1][1]', 'v[1][2]'): 115.84200276606165, ('v[1][1]', 'v[1][3]'): 115.84200276606165, ('v[1][1]', 'v[1][4]'): 115.84200276606165, ('v[1][1]', 'v[2][2]'): 2.23606797749979, ('v[1][1]', 'v[3][2]'): 2.23606797749979, ('v[1][1]', 'v[4][2]'): 2.23606797749979, ('v[1][1]', 'v[2][0]'): 2.23606797749979, ('v[1][1]', 'v[3][0]'): 2.23606797749979, ('v[1][1]', 'v[4][0]'): 2.23606797749979, ('v[1][2]', 'v[2][2]'): 115.84200276606165, ('v[1][2]', 'v[3][2]'): 115.84200276606165, ('v[1][2]', 'v[4][2]'): 115.84200276606165, ('v[1][2]', 'v[1][3]'): 115.84200276606165, ('v[1][2]', 'v[1][4]'): 115.84200276606165, ('v[1][2]', 'v[2][3]'): 2.23606797749979, ('v[1][2]', 'v[3][3]'): 2.23606797749979, ('v[1][2]', 'v[4][3]'): 2.23606797749979, ('v[1][2]', 'v[2][1]'): 2.23606797749979, ('v[1][2]', 'v[3][1]'): 2.23606797749979, ('v[1][2]', 'v[4][1]'): 2.23606797749979, ('v[1][3]', 'v[2][3]'): 115.84200276606165, ('v[1][3]', 'v[3][3]'): 115.84200276606165, ('v[1][3]', 'v[4][3]'): 115.84200276606165, ('v[1][3]', 'v[1][4]'): 115.84200276606165, ('v[1][3]', 'v[2][4]'): 2.23606797749979, ('v[1][3]', 'v[3][4]'): 2.23606797749979, ('v[1][3]', 'v[4][4]'): 2.23606797749979, ('v[1][3]', 'v[2][2]'): 2.23606797749979, ('v[1][3]', 'v[3][2]'): 2.23606797749979, ('v[1][3]', 'v[4][2]'): 2.23606797749979, ('v[1][4]', 'v[2][4]'): 115.84200276606165, ('v[1][4]', 'v[3][4]'): 115.84200276606165, ('v[1][4]', 'v[4][4]'): 115.84200276606165, ('v[1][4]', 'v[2][3]'): 2.23606797749979, ('v[1][4]', 'v[3][3]'): 2.23606797749979, ('v[1][4]', 'v[4][3]'): 2.23606797749979, ('v[2][0]', 'v[3][0]'): 115.84200276606165, ('v[2][0]', 'v[4][0]'): 115.84200276606165, ('v[2][0]', 'v[2][1]'): 115.84200276606165, ('v[2][0]', 'v[2][2]'): 115.84200276606165, ('v[2][0]', 'v[2][3]'): 115.84200276606165, ('v[2][0]', 'v[2][4]'): 115.84200276606165, ('v[2][0]', 'v[3][1]'): 1.4142135623730951, ('v[2][0]', 'v[4][1]'): 3.1622776601683795, ('v[2][1]', 'v[3][1]'): 115.84200276606165, ('v[2][1]', 'v[4][1]'): 115.84200276606165, ('v[2][1]', 'v[2][2]'): 115.84200276606165, ('v[2][1]', 'v[2][3]'): 115.84200276606165, ('v[2][1]', 'v[2][4]'): 115.84200276606165, ('v[2][1]', 'v[3][2]'): 1.4142135623730951, ('v[2][1]', 'v[4][2]'): 3.1622776601683795, ('v[2][1]', 'v[3][0]'): 1.4142135623730951, ('v[2][1]', 'v[4][0]'): 3.1622776601683795, ('v[2][2]', 'v[3][2]'): 115.84200276606165, ('v[2][2]', 'v[4][2]'): 115.84200276606165, ('v[2][2]', 'v[2][3]'): 115.84200276606165, ('v[2][2]', 'v[2][4]'): 115.84200276606165, ('v[2][2]', 'v[3][3]'): 1.4142135623730951, ('v[2][2]', 'v[4][3]'): 3.1622776601683795, ('v[2][2]', 'v[3][1]'): 1.4142135623730951, ('v[2][2]', 'v[4][1]'): 3.1622776601683795, ('v[2][3]', 'v[3][3]'): 115.84200276606165, ('v[2][3]', 'v[4][3]'): 115.84200276606165, ('v[2][3]', 'v[2][4]'): 115.84200276606165, ('v[2][3]', 'v[3][4]'): 1.4142135623730951, ('v[2][3]', 'v[4][4]'): 3.1622776601683795, ('v[2][3]', 'v[3][2]'): 1.4142135623730951, ('v[2][3]', 'v[4][2]'): 3.1622776601683795, ('v[2][4]', 'v[3][4]'): 115.84200276606165, ('v[2][4]', 'v[4][4]'): 115.84200276606165, ('v[2][4]', 'v[3][3]'): 1.4142135623730951, ('v[2][4]', 'v[4][3]'): 3.1622776601683795, ('v[3][0]', 'v[4][0]'): 115.84200276606165, ('v[3][0]', 'v[3][1]'): 115.84200276606165, ('v[3][0]', 'v[3][2]'): 115.84200276606165, ('v[3][0]', 'v[3][3]'): 115.84200276606165, ('v[3][0]', 'v[3][4]'): 115.84200276606165, ('v[3][0]', 'v[4][1]'): 2.0, ('v[3][1]', 'v[4][1]'): 115.84200276606165, ('v[3][1]', 'v[3][2]'): 115.84200276606165, ('v[3][1]', 'v[3][3]'): 115.84200276606165, ('v[3][1]', 'v[3][4]'): 115.84200276606165, ('v[3][1]', 'v[4][2]'): 2.0, ('v[3][1]', 'v[4][0]'): 2.0, ('v[3][2]', 'v[4][2]'): 115.84200276606165, ('v[3][2]', 'v[3][3]'): 115.84200276606165, ('v[3][2]', 'v[3][4]'): 115.84200276606165, ('v[3][2]', 'v[4][3]'): 2.0, ('v[3][2]', 'v[4][1]'): 2.0, ('v[3][3]', 'v[4][3]'): 115.84200276606165, ('v[3][3]', 'v[3][4]'): 115.84200276606165, ('v[3][3]', 'v[4][4]'): 2.0, ('v[3][3]', 'v[4][2]'): 2.0, ('v[3][4]', 'v[4][4]'): 115.84200276606165, ('v[3][4]', 'v[4][3]'): 2.0, ('v[4][0]', 'v[4][1]'): 115.84200276606165, ('v[4][0]', 'v[4][2]'): 115.84200276606165, ('v[4][0]', 'v[4][3]'): 115.84200276606165, ('v[4][0]', 'v[4][4]'): 115.84200276606165, ('v[4][1]', 'v[4][2]'): 115.84200276606165, ('v[4][1]', 'v[4][3]'): 115.84200276606165, ('v[4][1]', 'v[4][4]'): 115.84200276606165, ('v[4][2]', 'v[4][3]'): 115.84200276606165, ('v[4][2]', 'v[4][4]'): 115.84200276606165, ('v[4][3]', 'v[4][4]'): 115.84200276606165, ('v[0][0]', 'v[0][0]'): -10.486833480505139, ('v[0][1]', 'v[0][1]'): -10.486833480505139, ('v[0][2]', 'v[0][2]'): -10.486833480505139, ('v[0][3]', 'v[0][3]'): -10.486833480505139, ('v[0][4]', 'v[0][4]'): -10.486833480505139, ('v[1][0]', 'v[1][0]'): -10.486833480505139, ('v[1][1]', 'v[1][1]'): -10.486833480505139, ('v[1][2]', 'v[1][2]'): -10.486833480505139, ('v[1][3]', 'v[1][3]'): -10.486833480505139, ('v[1][4]', 'v[1][4]'): -10.486833480505139, ('v[2][0]', 'v[2][0]'): -10.486833480505139, ('v[2][1]', 'v[2][1]'): -10.486833480505139, ('v[2][2]', 'v[2][2]'): -10.486833480505139, ('v[2][3]', 'v[2][3]'): -10.486833480505139, ('v[2][4]', 'v[2][4]'): -10.486833480505139, ('v[3][0]', 'v[3][0]'): -10.486833480505139, ('v[3][1]', 'v[3][1]'): -10.486833480505139, ('v[3][2]', 'v[3][2]'): -10.486833480505139, ('v[3][3]', 'v[3][3]'): -10.486833480505139, ('v[3][4]', 'v[3][4]'): -10.486833480505139, ('v[4][0]', 'v[4][0]'): -10.486833480505139, ('v[4][1]', 'v[4][1]'): -10.486833480505139, ('v[4][2]', 'v[4][2]'): -10.486833480505139, ('v[4][3]', 'v[4][3]'): -10.486833480505139, ('v[4][4]', 'v[4][4]'): -10.486833480505139}
--------------------------------------------------------------------

CLASSICAL RESULTS:

--------------------------------------------------------------------
{'v[0][0]': 0, 'v[0][1]': 0, 'v[0][2]': 0, 'v[0][3]': 1, 'v[0][4]': 0, 'v[1][0]': 0, 'v[1][1]': 0, 'v[1][2]': 0, 'v[1][3]': 0, 'v[1][4]': 1, 'v[2][0]': 1, 'v[2][1]': 0, 'v[2][2]': 0, 'v[2][3]': 0, 'v[2][4]': 0, 'v[3][0]': 0, 'v[3][1]': 1, 'v[3][2]': 0, 'v[3][3]': 0, 'v[3][4]': 0, 'v[4][0]': 0, 'v[4][1]': 0, 'v[4][2]': 1, 'v[4][3]': 0, 'v[4][4]': 0}
number of broken constraint = 21
--------------------------------------------------------------------

TIME (sec):

--------------------------------------------------------------------
20.1192467212677
